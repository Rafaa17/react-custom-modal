{"version":3,"sources":["lib/Toast.tsx","lib/SvgIcons.tsx","lib/Modal.tsx","lib/component.tsx","lib/Header.tsx","lib/Footer.tsx","lib/Input.tsx","lib/ImageInput.tsx","lib/Validation.ts","lib/Dialog.tsx","lib/index.tsx","TestApp.tsx","index.js"],"names":["ToastPosition","closeIcon","color","height","width","aria-hidden","data-prefix","data-icon","className","xmlns","viewBox","fill","d","iconIllustrationTypes","warning","info","success","danger","DefaultToastPosition","BOTTOM_RIGHT","Toast","toasts","hideToast","map","toast","ToastItem","key","id","timeout","useState","toastData","setToast","in","out","animation","setAnimation","useEffect","hideMe","showMe","timeoutDuration","setTimeout","clearTimeout","useCallback","BOTTOM_CENTER","type","style","containerStyle","display","flexDirection","alignItems","customComponent","textStyle","text","cursor","onClick","Modal","hideModal","Component","ComponentJSX","componentProps","undefined","ModalToRender","setModalToRender","animationType","outAnimationType","allowOutsideClick","c","createElement","ModalBackdrop","document","body","classList","add","remove","ModalWrapper","children","ModalRoot","usePopup","componentJSX","component","Header","showCloseButton","title","headerTextStyle","headerStyle","position","right","Footer","optionsToRender","footerStyle","option","index","name","Input","item","setInputValues","inputValues","error","textAlign","label","inputType","onChange","val","nativeEvent","target","value","placeholder","ImageInput","inputRef","useRef","marginBottom","current","click","ref","multiple","event","files","imagePromises","images","Array","from","forEach","file","push","Promise","resolve","reader","FileReader","onload","e","src","result","readAsDataURL","all","then","readImage","image","alt","maxHeight","slice","borderRadius","top","zIndex","getDateWithoutTime","date","Date","toDateString","InputValidation","input","validation","required","message","this","DEFAULT_ERROR_MESSAGE","minDate","getTime","maxDate","minLength","length","maxLength","min","max","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","AnimationType","OutAnimationType","DialogType","Dialog","props","optionButtons","onConfirm","onCancel","isAlert","isInput","confirmText","cancelText","inputs","onDismissed","bodyComponent","defaultVals","default","i","getDefaultValues","errorValues","setErrorValues","validateInputs","allInputsToValidate","errorsMapping","res","validateText","validateNumber","validateDate","validateFile","validateInputValue","errors","Object","keys","inputsToRender","DefaultPopupActions","showModal","_component","_options","showAlert","hideAlert","showOptionDialog","showInputDialog","showToast","_toastId","ExportedPopupActions","ModalContext","createContext","Provider","reducer","Consumer","state","modalProps","findIndex","t","Error","PopupProvider","initialState","options","dispatch","isInputDialog","Math","random","toString","substring","toastId","useReducer","useContext","callMe","PopupActions","DANGER","MyComponent","TestComponent","background","padding","fontWeight","fontSize","JSON","stringify","buttonStyles","marginTop","a","SLIDE_IN_UP","SLIDE_OUT_UP","FADE_IN","FADE_OUT","WARNING","ZOOM_IN","SUCCESS","INFO","response","App","Setup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb8ba4cc.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport {AnimationType, IToast, ToastOptions} from \"./index\";\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\n\ninterface IToasts {\n    toasts?: Array<IToast>;\n    hideToast: (toastId: string) => void;\n}\n\nexport enum ToastPosition {\n    TOP_RIGHT = 'top-right',\n    BOTTOM_RIGHT = 'bottom-right',\n    BOTTOM_CENTER = 'bottom-center'\n}\n\nlet DefaultToastPosition = ToastPosition.BOTTOM_RIGHT;\n\nexport const setToastPosition = (position: ToastPosition) => {\n    DefaultToastPosition = position;\n}\n\nexport default function Toast({toasts, hideToast}: IToasts) {\n\n    return (\n        <div className={`react-custom-toast-container react-custom-toast-${DefaultToastPosition}`}>\n            {toasts && toasts.map(toast => <ToastItem key={toast.id} toast={toast} hideToast={hideToast}/>)}\n        </div>\n    )\n\n}\n\ninterface IProps {\n    toast: IToast,\n    animationType?: AnimationType;\n    hideToast: (toastId: string) => void;\n}\n\nfunction ToastItem({toast, hideToast}: IProps) {\n\n    const [toastData, setToast] = useState<ToastOptions | null>(null);\n\n    const [animation, setAnimation] = useState<{ in: string, out: string }>({in: '', out: ''});\n\n    let timeout: NodeJS.Timeout;\n\n    useEffect(() => {\n        if (toastData && !toast) {\n            hideMe();\n        } else if (toast && !toastData) {\n            showMe();\n            if (toast.timeoutDuration) {\n                timeout = setTimeout(hideMe, toast.timeoutDuration)\n            }\n\n        }\n        return () => clearTimeout(timeout);\n    }, [toast])\n\n    useEffect(() => {\n\n        if (animation.in && toast) {\n            setToast(toast);\n        }\n\n        if (animation.out) {\n            timeout = setTimeout(() => {\n                setToast(null);\n                hideToast(toast.id);\n            }, 500);\n        }\n\n    }, [animation])\n\n    const hideMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({out: 'animate__animated animate__slideOutDown animate__faster', in: ''})\n        } else {\n            setAnimation({out: 'animate__animated animate__slideOutRight animate__faster', in: ''})\n        }\n    }, []);\n\n    const showMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({in: 'animate__animated animate__slideInUp animate__faster', out: ''})\n        } else {\n            setAnimation({in: 'animate__animated animate__slideInRight animate__faster', out: ''})\n        }\n    }, []);\n\n    if (!toastData)\n        return null;\n\n    return (\n        <div className={`react-custom-toast-${toastData.type} react-custom-toast ${animation.in} ${animation.out}`}\n             style={{...toast.containerStyle}}>\n            <div style={{\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center'\n            }}>\n                {toast.customComponent || (\n                    <>\n                        <div>\n                            {iconIllustrationTypes[toastData.type]}\n                        </div>\n                        <div className={'react-custom-toast-text'} style={{...toast.textStyle}}>\n                            {toastData.text}\n                        </div>\n                    </>\n                )}\n            </div>\n            <div style={{width: \"10%\", cursor: 'pointer'}}\n                 onClick={hideMe}>{closeIcon()}</div>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport const closeIcon = (color:string = '#484848') => <svg color={color} height={20} width={20} aria-hidden=\"true\" data-prefix=\"fas\"\n                                    data-icon=\"times\"\n                                    className=\"svg-inline--fa fa-times fa-w-11\" xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 352 512\">\n    <path fill=\"currentColor\"\n          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"/>\n</svg>;\n\nexport const iconIllustrationTypes = {\n    warning: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 0C115.2 0 0 115.2 0 256s115.2 256 256 256 256-115.2 256-256S396.8 0 256 0zm0 51.2c28.16 0 48.64 23.04 46.08 51.2L281.6 307.2h-51.2l-20.48-204.8c-2.56-28.16 17.92-51.2 46.08-51.2zm0 409.6c-28.16 0-51.2-23.04-51.2-51.2 0-28.16 23.04-51.2 51.2-51.2s51.2 23.04 51.2 51.2c0 28.16-23.04 51.2-51.2 51.2z\"/></svg>,\n    info: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 450.56 450.56\"><path d=\"M225.28 0C101.376 0 0 101.376 0 225.28s101.376 225.28 225.28 225.28 225.28-101.376 225.28-225.28S349.184 0 225.28 0zm23.552 321.024h-48.128V183.296h48.128v137.728zm0-167.424h-48.128v-30.208h48.128V153.6z\"/></svg>,\n    success: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 477.867 477.867\"><path d=\"M238.933 0C106.974 0 0 106.974 0 238.933s106.974 238.933 238.933 238.933 238.933-106.974 238.933-238.933C477.726 107.033 370.834.141 238.933 0zm131.533 165.666L199.799 336.333c-6.665 6.663-17.468 6.663-24.132 0L107.4 268.066c-6.78-6.548-6.968-17.352-.42-24.132 6.548-6.78 17.352-6.968 24.132-.42.142.138.282.277.42.42l56.201 56.201 158.601-158.601c6.78-6.548 17.584-6.36 24.132.419 6.388 6.614 6.388 17.099 0 23.713z\"/></svg>,\n    danger: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\"   viewBox=\"0 0 512 512\"><path d=\"M501.362 383.95L320.497 51.474c-29.059-48.921-99.896-48.986-128.994 0L10.647 383.95c-29.706 49.989 6.259 113.291 64.482 113.291h361.736c58.174 0 94.203-63.251 64.497-113.291zM256 437.241c-16.538 0-30-13.462-30-30s13.462-30 30-30 30 13.462 30 30-13.462 30-30 30zm30-120c0 16.538-13.462 30-30 30s-30-13.462-30-30v-150c0-16.538 13.462-30 30-30s30 13.462 30 30v150z\"/></svg>\n}\n\n","import React, {createElement, useCallback, useEffect, useState} from 'react';\n\ninterface IProps {\n    hideModal: () => void;\n    Component?: () => JSX.Element;\n    ComponentJSX?: JSX.Element;\n    componentProps: React.ComponentProps<any>\n}\n\nexport default function Modal({hideModal, Component, ComponentJSX, componentProps}: IProps) {\n\n    const [ModalToRender, setModalToRender] = useState<JSX.Element | undefined>(undefined);\n\n    const [animation, setAnimation] = useState<{ in: string, out: string }>({in: '', out: ''});\n\n    const {animationType, outAnimationType, allowOutsideClick = true} = componentProps;\n\n    let timeout: NodeJS.Timeout;\n\n    useEffect(() => {\n        if (ModalToRender && !(Component || ComponentJSX)) {\n            hideMe();\n        } else if (Component || ComponentJSX) {\n            showMe();\n        }\n        return () => clearTimeout(timeout);\n    }, [Component, ComponentJSX, componentProps])\n\n    useEffect(() => {\n\n        if (animation.in && (Component || ComponentJSX)) {\n            // @ts-ignore\n            let c: JSX.Element | undefined;\n            if (Component) {\n                c = createElement(Component, {\n                    ...componentProps, hideModal: hideModal\n                });\n            }\n            setModalToRender(ComponentJSX || c);\n        }\n\n        if (animation.out) {\n            if (!outAnimationType) {\n                setModalToRender(undefined);\n            } else\n                timeout = setTimeout(() => {\n                    setModalToRender(undefined);\n                }, 600);\n        }\n\n    }, [animation])\n\n    const hideMe = useCallback(() => {\n        setAnimation({out: `animate__animated animate__${outAnimationType} animate__faster`, in: ''})\n    }, [outAnimationType]);\n\n    const showMe = useCallback(() => {\n        setAnimation({out: '', in: `animate__animated animate__${animationType} animate__faster`})\n    }, [animationType]);\n\n    if (!ModalToRender)\n        return null;\n\n    return (\n        <ModalWrapper>\n            <ModalBackdrop onClick={allowOutsideClick ? hideModal : ()=>{}}/>\n            <div className={animation.in || animation.out}>\n                {ModalToRender}\n            </div>\n        </ModalWrapper>\n    )\n\n}\n\nconst ModalBackdrop = ({onClick}: { onClick: () => void }) => {\n    useEffect(() => {\n        document.body.classList.add(\"react-custom-modal-open\");\n\n        return () => {\n            document.body.classList.remove(\"react-custom-modal-open\");\n        };\n    }, []);\n\n    return (\n        <div\n            onClick={onClick}\n            className={`react-custom-modal-backdrop`}\n        >\n        </div>\n    );\n};\n\nconst ModalWrapper = ({children}: { children: any }) => (\n    <div className=\"react-custom-modal-wrapper\">{children}</div>\n);","import React from \"react\";\n\nimport \"./index.scss\";\nimport \"./animate.css\";\nimport {usePopup} from \"./index\";\nimport Toast from \"./Toast\";\nimport Modal from \"./Modal\";\n\nexport const ModalRoot = () => {\n\n    let {\n        componentJSX: ComponentJSX,\n        component: Component,\n        toasts,\n        componentProps,\n        hideModal,\n        hideToast,\n    } = usePopup();\n\n    componentProps = {...componentProps}\n\n    return (\n        <>\n            <Modal componentProps={componentProps} Component={Component} ComponentJSX={ComponentJSX}\n                   hideModal={hideModal} />\n            <Toast hideToast={hideToast} toasts={toasts}/>\n        </>\n    )\n\n};\n","import React from 'react';\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\nimport {DialogType} from \"./index\";\n\ninterface IProps {\n    showCloseButton: boolean;\n    type: DialogType;\n    hideModal: () => void;\n    title: string;\n    headerTextStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n}\n\nconst Header = ({showCloseButton, type, hideModal, title, headerTextStyle, headerStyle}: IProps) => {\n\n    return (\n        <div className={`react-custom-header react-custom-header-${type}`} style={{...headerStyle}}>\n            {iconIllustrationTypes[type]}\n            {showCloseButton && (\n                <div style={{position: 'absolute', right: 20, cursor: 'pointer'}}\n                     onClick={hideModal}>{closeIcon()}</div>\n            )}\n            <div className={`react-custom-title ${iconIllustrationTypes[type] ? 'react-custom-title-margin' : ''}`} style={{...headerTextStyle}}>{title}</div>\n        </div>\n    )\n\n}\n\nexport default Header;","import React from 'react';\n\ninterface IProps {\n    optionsToRender: Array<any>;\n    footerStyle?: React.CSSProperties;\n}\n\nexport default function Footer({optionsToRender, footerStyle}: IProps) {\n\n    return (\n        <div className={'react-custom-footer'} style={{...footerStyle}}>\n            <div className={'react-custom-options-container'}>\n                {optionsToRender.map((option,index) => (\n                    <button key={`option${index}`} className={'react-custom-option-button'} onClick={option.onClick}>\n                        {option.name}\n                    </button>\n                ))}\n            </div>\n        </div>\n    )\n\n\n}","import React, {Dispatch, SetStateAction} from 'react';\nimport {InputProps} from \"./index\";\n\ninterface IProps {\n\titem: InputProps;\n\n\tsetInputValues: Dispatch<SetStateAction<{ [key: string]: any }>>;\n\n\tinputValues: {};\n\n\terror?: string\n}\n\nexport default function Input({item, setInputValues, inputValues, error}: IProps) {\n\n\treturn (\n\t\t<div style={{textAlign: \"left\"}}>\n\t\t\t<label style={{display: 'block'}} className={'react-custom-input-label-item'} >\n\t\t\t\t{item.label}\n\t\t\t</label>\n\t\t\t{item.inputType && item.inputType !== \"textarea\" ? (\n\t\t\t\t<input\n\t\t\t\t\tclassName={'react-custom-input-item'}\n\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\tsetInputValues({\n\t\t\t\t\t\t\t...inputValues,\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t[item.name]: val.nativeEvent.target.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tinputValues[item.name] ? inputValues[item.name] : ''\n\t\t\t\t\t}\n\t\t\t\t\tid={item.name}\n\t\t\t\t\tplaceholder={item.placeholder}\n\t\t\t\t\ttype={item.inputType || \"text\"}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t{item.inputType === \"textarea\" ? (\n\t\t\t\t<textarea\n\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\tsetInputValues({\n\t\t\t\t\t\t\t...inputValues,\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t[item.name]: val.nativeEvent.target.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tinputValues[item.name] ? inputValues[item.name] : ''\n\t\t\t\t\t}\n\t\t\t\t\tclassName={'react-custom-input-item'}\n\t\t\t\t\tid={item.name}\n\t\t\t\t\tplaceholder={item.placeholder}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t{error &&\n\t            <label style={{display: 'block'}} className={'react-custom-input-error-item'}>\n\t\t\t\t\t{error}\n\t            </label>\n\t\t\t}\n\t\t</div>\n\t)\n\n}","import React, {ChangeEvent, Dispatch, SetStateAction, useRef} from 'react';\nimport {ImageInputProps, InputProps} from \"./index\";\nimport {closeIcon} from \"./SvgIcons\";\n\ninterface IProps {\n    setInputValues: Dispatch<SetStateAction<{ [key: string]: any }>>;\n    inputValues: { [key: string]: any };\n    item: InputProps;\n    error?: string;\n}\n\nexport default function ImageInput({setInputValues, inputValues, item, error}: IProps) {\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const readImage = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files) {\n            let imagePromises: Array<Promise<void>> = [];\n            let images: Array<any> = [];\n            Array.from(event.target.files).forEach((file: File) => {\n                imagePromises.push(\n                    new Promise((resolve) => {\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            images.push({src: e.target!.result, value: file});\n                            resolve();\n                        };\n                        reader.readAsDataURL(file);\n                    })\n                );\n            });\n            Promise.all(imagePromises).then(() => {\n                setInputValues({\n                    ...inputValues,\n                    // @ts-ignore\n                    [item.name]: [...images],\n                });\n                inputRef.current!.value! = \"\";\n                // event.target.reset();\n            });\n        }\n    };\n\n    return (\n        <>\n            <div style={{textAlign: \"left\"}}>\n                <label style={{display: \"block\", marginBottom: 5}}>{item.label || ''}</label>\n                <div\n                    style={{cursor: 'pointer'}}\n                    className={'react-custom-input-item select-image'}\n                    onClick={() => {\n                        if (inputRef.current) inputRef.current.click();\n                    }}\n                >\n                    Select Image\n                </div>\n                <input\n                    ref={(ref) => {\n                        // @ts-ignore\n                        inputRef.current = ref;\n                    }}\n                    value={inputRef.current ? inputRef.current.value : \"\"}\n                    multiple={(item as ImageInputProps).multiple || false}\n                    className={'react-custom-input-item'}\n                    onChange={(val) => readImage(val)}\n                    style={{display: \"none\"}}\n                    id={\"image\"}\n                    type={\"file\"}\n                />\n            </div>\n            <div style={{textAlign: \"left\"}}>\n                {inputValues &&\n                inputValues[item.name] &&\n                // @ts-ignore\n                inputValues[item.name].map((image, index) => (\n                    <div\n                        className={'react-custom-input-img-container'}\n                        key={'image' + index}\n                        style={{\n                            position: \"relative\",\n                        }}\n                    >\n                        <img alt=\"\" style={{maxHeight: 100}} src={image.src}/>\n                        <div\n                            onClick={() => {\n                                setInputValues({\n                                    ...inputValues,\n                                    // @ts-ignore\n                                    [item.name]:\n                                        [...inputValues[item.name].slice(0, index),\n                                            ...inputValues[item.name].slice(index + 1)]\n                                })\n                            }\n                            }\n                            style={{\n                                borderRadius: 5,\n                                position: \"absolute\",\n                                top: 5,\n                                right: 5,\n                                zIndex: 500,\n                                cursor: 'pointer'\n                            }}\n                        >\n                            {closeIcon('white')}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {error &&\n            <label style={{display: 'block'}} className={'react-custom-input-error-item'}>\n                {error}\n            </label>\n            }\n        </>\n    )\n\n}","import {InputProps} from \"./index\";\n\nexport interface ValidationResult {\n\tsuccess: boolean,\n\tmessage?: string\n}\n\nconst getDateWithoutTime = function (date: Date) {\n\treturn new Date(date.toDateString());\n}\n\nexport class InputValidation {\n\n\tprivate static DEFAULT_ERROR_MESSAGE = 'Invalid Value';\n\n\tpublic static validateDate(input: InputProps, value: string | undefined): ValidationResult {\n\n\t\tconst validation = input.validation!;\n\n\t\tif (validation.required) {\n\t\t\tif (!value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.required.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.minDate) {\n\t\t\tif (value && new Date(value).getTime() < getDateWithoutTime(validation.minDate.value).getTime()) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.minDate.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.maxDate) {\n\t\t\tif (value && new Date(value).getTime() > getDateWithoutTime(validation.maxDate.value).getTime()) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.maxDate.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsuccess: true\n\t\t}\n\n\t}\n\n\tpublic static validateText(input: InputProps, value: string | undefined): ValidationResult {\n\n\t\tconst validation = input.validation!;\n\n\t\tif (validation.required) {\n\t\t\tif (!value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.required.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.minLength) {\n\t\t\tif (value !== undefined && value.length < validation.minLength.value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.minLength.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.maxLength) {\n\t\t\tif (value !== undefined && value.length > validation.maxLength.value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.maxLength.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t}\n\n\t}\n\n\tpublic static validateNumber(input: InputProps, value: number | undefined): ValidationResult {\n\n\t\tconst validation = input.validation!;\n\n\t\tif (validation.required) {\n\t\t\tif (!value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.required.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.min) {\n\t\t\tif (value === undefined || value < validation.min.value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.min.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validation.max) {\n\t\t\tif (value !== undefined && value > validation.max.value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.max.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsuccess: true\n\t\t}\n\n\t}\n\n\tpublic static validateFile(input: InputProps, value: File | undefined): ValidationResult {\n\n\t\tconst validation = input.validation!;\n\n\t\tif (validation.required) {\n\t\t\tif (!value) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: validation.required.message ?? this.DEFAULT_ERROR_MESSAGE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsuccess: true\n\t\t}\n\n\t}\n\n}","import React, {useState} from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {DialogType, InputProps, OptionDialogButton} from \"./index\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Input from \"./Input\";\nimport ImageInput from \"./ImageInput\";\nimport {InputValidation, ValidationResult} from \"./Validation\";\n\n// @ts-ignore\nDate.prototype.toDateInputValue = function () {\n    var local = new Date(this);\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n};\n\ninterface DialogProps {\n    title: string,\n    text: string,\n    type: DialogType,\n    hideModal: () => {},\n    optionButtons: Array<OptionDialogButton>,\n    onConfirm: (result?: { [key: string]: any }) => {},\n    onCancel: (result?: { [key: string]: any }) => {},\n    isAlert: boolean,\n    isInput: boolean,\n    confirmText: string,\n    cancelText: string,\n    showCloseButton: boolean,\n    inputs: Array<InputProps>,\n    onDismissed: (result?: { [key: string]: any }) => {},\n    onOpened: (result?: { [key: string]: any }) => {},\n    input: InputProps,\n    headerTextStyle?: React.CSSProperties;\n    textStyle?: React.CSSProperties;\n    containerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    bodyComponent?: JSX.Element;\n}\n\n\nconst Dialog = (props: DialogProps) => {\n\n    const {\n        title,\n        text,\n        type,\n        hideModal,\n        optionButtons = null,\n        onConfirm = null,\n        onCancel = null,\n        isAlert = true,\n        showCloseButton = false,\n        isInput = false,\n        confirmText = \"Ok\",\n        cancelText = \"Cancel\",\n        inputs = null,\n        onDismissed = null,\n        input,\n        headerTextStyle,\n        textStyle,\n        containerStyle,\n        headerStyle,\n        footerStyle,\n        bodyComponent\n    } = props;\n\n    const getDefaultValues = () => {\n\n        let defaultVals = {};\n\n        if (input && !inputs && input.default) {\n            if (input.inputType === 'date') {\n                // @ts-ignore\n                defaultVals[input.name] = (input.default as Date).toDateInputValue();\n            } else {\n                defaultVals[input.name] = input.default;\n            }\n        }\n        if (inputs && !input) {\n\n            inputs.forEach(i => {\n                if (i.default) {\n                    if (i.inputType === 'date') {\n                        // @ts-ignore\n                        defaultVals[i.name] = (i.default as Date).toDateInputValue();\n                    } else {\n                        defaultVals[i.name] = i.default;\n                    }\n                }\n            })\n        }\n\n        return defaultVals;\n    }\n\n\n    const [inputValues, setInputValues] = useState<{ [key: string]: any }>(() => getDefaultValues());\n    const [errorValues, setErrorValues] = useState<{ [key: string]: string }>({});\n\n    const validateInputValue = (input: InputProps) :{[key:string]:string} | null => {\n\n        let result: ValidationResult;\n\n        switch (input.inputType) {\n            case \"text\":\n                result = InputValidation.validateText(input, inputValues[input.name]);\n                break;\n            case \"number\":\n                result = InputValidation.validateNumber(input, inputValues[input.name]);\n                break;\n            case \"date\":\n                result = InputValidation.validateDate(input, inputValues[input.name]);\n                break;\n            case \"file\":\n                result = InputValidation.validateFile(input, inputValues[input.name]);\n                break;\n            case \"image\":\n                result = InputValidation.validateFile(input, inputValues[input.name]);\n                break;\n            default:\n                result = {\n                    success: true,\n                    message: ''\n                }\n        }\n\n        if (!result.success) {\n            return  {[input.name]: result.message!};\n        }\n\n        return null;\n\n    }\n\n    const validateInputs = () :{[key:string]:string} => {\n\n        setErrorValues({});\n\n        const allInputsToValidate = [];\n\n        if (input && input.validation) {\n            allInputsToValidate.push(input);\n        }\n\n        if (inputs) {\n            for (const i of inputs) {\n                if (i.validation) {\n                    allInputsToValidate.push(i);\n                }\n            }\n        }\n\n        let errorsMapping = {};\n\n        allInputsToValidate.forEach((input)=>{\n            const res = validateInputValue(input);\n            if (res !== null) {\n                errorsMapping = {\n                    ...errorsMapping,\n                    ...res\n                }\n            }\n        });\n\n        return errorsMapping;\n\n    }\n\n    const confirmHandle = () => {\n\n        const errors = validateInputs();\n\n        if (Object.keys(errors).length === 0){\n            hideModal();\n            if (onConfirm) {\n                onConfirm(inputValues);\n            };\n            if (onDismissed && isInput) onDismissed(inputValues);\n        } else {\n            setErrorValues(errors);\n        }\n\n    }\n\n    let optionsToRender = [];\n\n    if (!isAlert)\n        if (optionButtons) optionsToRender = optionButtons;\n        else\n            optionsToRender = [\n                {\n                    name: cancelText,\n                    onClick: () => {\n                        hideModal();\n                        if (onCancel) onCancel();\n                        if (onDismissed && isInput) onDismissed(inputValues);\n                    },\n                },\n                {\n                    name: confirmText,\n                    onClick: confirmHandle,\n                },\n            ];\n    else\n        optionsToRender = [\n            {\n                name: confirmText,\n                onClick: () => {\n                    hideModal();\n                },\n            },\n        ];\n\n    let inputsToRender: InputProps[] = [];\n\n    if (isInput) {\n        if (!inputs) inputsToRender = [input];\n        else inputsToRender = inputs;\n    }\n\n    return (\n        <div className={'react-custom-dialog-wrapper'} style={{...containerStyle}}>\n            <Header headerStyle={headerStyle} headerTextStyle={headerTextStyle} showCloseButton={showCloseButton}\n                    type={type}\n                    hideModal={hideModal} title={title}/>\n            {bodyComponent || (\n                <>\n                    {text && text !== \"\" ?\n                        <div className={'react-custom-body-text'} style={{...textStyle}}>{text}</div> : null}\n                    {isInput && (\n                        <div className={'react-custom-inputs-container'}>\n                            <>\n                                {inputsToRender.map((item, index) =>\n                                    <div key={`input${index}`} className={'react-custom-input-container'}>\n                                        {item.inputType !== 'image' ? (\n                                                <Input error={errorValues[item.name]} item={item} setInputValues={setInputValues}\n                                                       inputValues={inputValues}/>) :\n                                            <ImageInput error={errorValues[item.name]} item={item} setInputValues={setInputValues}\n                                                        inputValues={inputValues}/>}\n                                    </div>\n                                )}\n                            </>\n                        </div>\n                    )}\n                </>\n            )\n            }\n            <Footer footerStyle={footerStyle} optionsToRender={optionsToRender}/>\n        </div>\n    );\n};\n\nexport default Dialog;\n","import React, {\n    createContext,\n    useContext,\n    useReducer\n} from \"react\";\nimport {ModalRoot} from \"./component\";\nimport Dialog from \"./Dialog\";\nimport {ToastPosition} from \"./Toast\";\n\nexport enum AnimationType {\n    FADE_IN = 'fadeIn',\n    FADE_IN_UP = 'fadeInUp',\n    FLASH = 'flash',\n    HEART_BEAT = 'heartBeat',\n    SLIDE_IN_LEFT = 'slideInLeft',\n    SLIDE_IN_RIGHT = 'slideInRight',\n    SLIDE_IN_UP = 'slideInUp',\n    SWING = 'swing',\n    ZOOM_IN = 'zoomIn'\n}\n\nexport enum OutAnimationType {\n    FADE_OUT = 'fadeOut',\n    SLIDE_OUT_LEFT = 'slideOutLeft',\n    SLIDE_OUT_RIGHT = 'slideOutRight',\n    SLIDE_OUT_UP = 'slideOutUp',\n    ZOOM_OUT = 'zoomOut'\n}\n\nexport enum DialogType {\n    WARNING = 'warning',\n    INFO = 'info',\n    DANGER = 'danger',\n    SUCCESS = 'success'\n}\n\nexport interface OptionDialogButton {\n    name: string;\n    onClick: () => void;\n    color?: string;\n}\n\n\nexport declare type Message = string;\nexport declare type ValidationValue = boolean | number | string | Date | RegExp;\nexport declare type ValidationOption<Value extends ValidationValue = ValidationValue> = ValidationValueMessage<Value>;\nexport declare type ValidationValueMessage<Value extends ValidationValue = ValidationValue> = {\n    value: Value;\n    message?: Message;\n};\nexport declare type ValidateResult = Message | boolean | undefined;\nexport declare type Validate = (data: any) => ValidateResult | Promise<ValidateResult>;\nexport declare type ValidationOptions = Partial<{\n    required: ValidationOption<boolean>;\n    min: ValidationOption<number>;\n    max: ValidationOption<number>;\n    minDate: ValidationOption<Date>;\n    maxDate: ValidationOption<Date>;\n    maxLength: ValidationOption<number>;\n    minLength: ValidationOption<number>;\n    pattern: ValidationOption<RegExp>;\n    validate: Validate | Record<string, Validate>;\n}>;\n\ninterface OptionDialogOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    cancelText?: string;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    onCancel?: () => void;\n    onConfirm?: () => void;\n    optionButtons?: Array<OptionDialogButton>;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string,\n    type?: DialogType;\n    bodyComponent?: JSX.Element;\n    allowOutsideClick?: boolean;\n}\n\nexport interface InputProps {\n    validation?: ValidationOptions;\n    default?: string | Date | number;\n    inputType: 'text' | 'file' | 'number' | 'textarea' | 'date' | 'image';\n    label?: string;\n    /*\n        The name that will be used in the response to read the value\n     */\n    name: string;\n    placeholder?: string;\n}\n\nexport interface ImageInputProps extends InputProps{\n    inputType: 'image';\n    multiple?: boolean;\n}\n\ninterface InputDialogOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    cancelText?: string;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    input?: InputProps | ImageInputProps;\n    inputs?: Array<InputProps | ImageInputProps>;\n    onCancel?: () => void;\n    onConfirm?: (result: { [key: string]: any }) => void;\n    onDismissed?: () => void;\n    options?: Array<OptionDialogButton>;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string;\n    type?: DialogType;\n    allowOutsideClick?: boolean;\n}\n\ninterface AlertOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string;\n    type?: DialogType;\n    bodyComponent?: JSX.Element;\n    allowOutsideClick?: boolean;\n}\n\nexport interface ToastOptions {\n    containerStyle?: React.CSSProperties;\n    customComponent?: JSX.Element;\n    position?: ToastPosition;\n    text?: string;\n    textStyle?: React.CSSProperties,\n    timeoutDuration?: number;\n    type: DialogType;\n    showCloseButton?: boolean;\n}\n\nexport type IToast = ToastOptions & { id: string };\n\nexport interface ModalOptions {\n    animationType?: AnimationType,\n    outAnimationType?: OutAnimationType,\n    timeoutDuration?: number;\n}\n\ninterface PopupContext {\n    component?: () => JSX.Element;\n    componentJSX?: JSX.Element;\n    componentProps?: React.ComponentProps<any>;\n    toasts?: Array<IToast>;\n    showModal: (component: JSX.Element, options?: ModalOptions) => void;\n    hideModal: () => void;\n    showAlert: (options: AlertOptions) => void;\n    hideAlert: () => void;\n    showOptionDialog: (options: OptionDialogOptions) => void;\n    showInputDialog: (options: InputDialogOptions) => void;\n    showToast: (options: ToastOptions) => void;\n    hideToast: (toastId: string) => void;\n}\n\nlet DefaultPopupActions: PopupContext = {\n    showModal: (_component: JSX.Element, _options?: ModalOptions) => null,\n    hideModal: () => null,\n    showAlert: (_options: AlertOptions) => null,\n    hideAlert: () => null,\n    showOptionDialog: (_options: OptionDialogOptions) => null,\n    showInputDialog: (_options: InputDialogOptions) => null,\n    showToast: (_options: ToastOptions) => null,\n    hideToast: (_toastId: string) => null,\n}\n\nlet ExportedPopupActions: Omit<PopupContext, 'componentProps' | 'component' | 'componentJSX' | 'toasts'> = {\n    ...DefaultPopupActions\n}\n\nconst ModalContext = createContext<PopupContext>(DefaultPopupActions);\n\nconst {Provider, Consumer: ModalConsumer} = ModalContext;\n\nconst reducer = (state: any, {\n    type,\n    component,\n    componentProps,\n    componentJSX,\n    toast,\n    id\n}: { type: 'openModal' | 'hideModal' | 'showToast' | 'hideToast', componentJSX?: JSX.Element, component?: any, componentProps?: any, toast?: IToast, id?: string }) => {\n    switch (type) {\n        case \"openModal\":\n            return {...state, component, componentProps, componentJSX};\n        case \"hideModal\":\n            return {...state, component: null, modalProps: {}, componentJSX: null};\n        case \"showToast\":\n            return {...state, toasts: [...state.toasts, toast], componentProps};\n        case \"hideToast\":\n            const index = state.toasts.findIndex((t: { id: string | undefined; }) => t.id === id);\n            return {...state, toasts: [...state.toasts.slice(0, index), ...state.toasts.slice(index + 1)]};\n        default:\n            throw new Error(\"Unspecified reducer action\");\n    }\n};\n\nconst PopupProvider = ({children}: { children: any }) => {\n\n    const initialState: PopupContext = {\n        componentJSX: undefined,\n        component: undefined,\n        componentProps: {},\n        toasts: [],\n        showModal: (componentJSX: JSX.Element, options?: ModalOptions) => {\n            dispatch({type: \"openModal\", componentJSX, componentProps: {...options}});\n        },\n        hideModal: () => {\n            dispatch({type: \"hideModal\"});\n        },\n        showAlert: (options: AlertOptions) => {\n            dispatch({\n                    type: 'openModal',\n                    component: Dialog, componentProps: {isAlert: true, isInputDialog: false, ...options}\n                }\n            )\n        },\n        hideAlert: () => {\n            dispatch({type: \"hideModal\"})\n        },\n        showOptionDialog: (options: OptionDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: false,\n                    ...options\n                }\n            });\n        },\n        showInputDialog: (options: InputDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: true,\n                    ...options\n                }\n            });\n        },\n        showToast: (options: ToastOptions) => {\n            dispatch({\n                type: 'showToast',\n                toast: {...options, id: Math.random().toString(36).substring(7)},\n                componentProps: {...options}\n            })\n        },\n        hideToast: (toastId?: string) => {\n            dispatch({\n                type: 'hideToast',\n                id: toastId\n            })\n        }\n    };\n\n    ExportedPopupActions = initialState;\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <div>\n            <Provider value={state}>\n                <ModalRoot/>\n                {children}\n            </Provider>\n        </div>\n    );\n};\n\nconst usePopup = () => useContext(ModalContext);\n\n\nexport {ModalConsumer, PopupProvider, usePopup, ExportedPopupActions as PopupActions};","import React from 'react';\nimport {AnimationType, DialogType, OutAnimationType, PopupActions, PopupProvider, usePopup} from './lib'\n\nimport './TestApp.css'\n\nfunction callMe() {\n\tPopupActions.showToast({text: 'test', type: DialogType.DANGER});\n}\n\nconst MyComponent = () => {\n\n\tconst TestComponent = (props: { a: string }) => {\n\n\t\treturn (\n\t\t\t<div style={{background: 'white', borderRadius: 5, width: 500, padding: 20}}>\n\t\t\t\t<h4> Fantasy T-shirt</h4>\n\t\t\t\t<label className={\"text-muted\"}>Shirts</label>\n\t\t\t\t<h3 className={\"mt-3\"} style={{fontWeight: 600, fontSize: \"20px\"}}>\n\t\t\t\t\t$39.99\n\t\t\t\t</h3>\n\t\t\t\t<p className={\"mt-3\"}>\n\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Numquam,\n\t\t\t\t\tsapiente illo. Sit error voluptas repellat rerum quidem, soluta enim\n\t\t\t\t\tperferendis voluptates laboriosam. Distinctio, officia quis dolore\n\t\t\t\t\tquos sapiente tempore alias.\n\t\t\t\t</p>\n\t\t\t\tReceived\n\t\t\t\tProps: {JSON.stringify(props)}\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\tconst {showAlert, showOptionDialog, showInputDialog, showModal, showToast} = usePopup();\n\n\tconst buttonStyles: React.CSSProperties = {\n\t\tdisplay: 'block',\n\t\tmarginTop: 5\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Modal</h2>\n\t\t\t<div className={'example-button'} style={buttonStyles}\n\t\t\t     onClick={() => showModal(<TestComponent a={'test'}/>, {\n\t\t\t\t     animationType: AnimationType.SLIDE_IN_UP,\n\t\t\t\t     outAnimationType: OutAnimationType.SLIDE_OUT_UP\n\t\t\t     })}>Modal\n\t\t\t</div>\n\n\t\t\t<h2>Alert</h2>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n\t\t\t\ttype: DialogType.DANGER,\n\t\t\t\ttext: 'Text',\n\t\t\t\ttitle: 'Title',\n\t\t\t\tanimationType: AnimationType.FADE_IN,\n\t\t\t\toutAnimationType: OutAnimationType.FADE_OUT\n\t\t\t})}>Danger Alert\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n\t\t\t\ttype: DialogType.WARNING,\n\t\t\t\ttext: 'Text',\n\t\t\t\ttitle: 'Title',\n\t\t\t\tanimationType: AnimationType.ZOOM_IN\n\t\t\t})}>Warning Alert\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles}\n\t\t\t     onClick={() => showAlert({\n\t\t\t\t     type: DialogType.SUCCESS, text: 'Text',\n\t\t\t\t     title: 'Title',\n\t\t\t     })}>Success\n\t\t\t\tAlert\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles}\n\t\t\t     onClick={() => showAlert({\n\t\t\t\t     type: DialogType.INFO, text: 'Text',\n\t\t\t\t     title: 'Title',\n\t\t\t\t     allowOutsideClick: false\n\t\t\t     })}>Info Alert\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n\t\t\t\ttype: DialogType.WARNING,\n\t\t\t\ttext: 'Text',\n\t\t\t\ttitle: 'Title',\n\t\t\t\tanimationType: AnimationType.FADE_IN,\n\t\t\t\tbodyComponent: <TestComponent a={'a'}/>\n\t\t\t})}>Custom Content Alert\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showOptionDialog({\n\t\t\t\ttext: 'Text',\n\t\t\t\ttitle: 'Title',\n\t\t\t})}>Option\n\t\t\t\tDialog\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n\t\t\t\ttitle: 'Sign Up',\n\t\t\t\tshowCloseButton: true,\n\t\t\t\theaderTextStyle: {fontWeight: \"bold\", fontSize: \"x-large\"},\n\t\t\t\theaderStyle: {marginTop: 5, marginBottom: 5},\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tinputType: 'text', name: 'fname', label: 'First Name', default: 'John Doe', validation: {\n\t\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\t\tvalue: 5,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{inputType: 'text', name: 'lname', label: 'Last Name', validation: {required: {value: true, message: 'Value is required'}}},\n\t\t\t\t\t{inputType: 'text', name: 'address', label: 'Address', validation: {required: {value: true}}},\n\t\t\t\t\t{inputType: 'text', name: 'zip', label: 'Zip', validation: {required: {value: true}}},\n\t\t\t\t\t{inputType: 'number', name: 'age', label: 'Age', validation: {min: {value: 5}}},\n\t\t\t\t\t{\n\t\t\t\t\t\tinputType: 'image',\n\t\t\t\t\t\tname: 'avatar',\n\t\t\t\t\t\tlabel: 'Avatar',\n\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\tvalidation: {\n\t\t\t\t\t\t\trequired: {\n\t\t\t\t\t\t\t\tvalue: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tinputType: 'date',\n\t\t\t\t\t\tname: 'dob',\n\t\t\t\t\t\tlabel: 'Date of Birth',\n\t\t\t\t\t\tdefault: new Date(),\n\t\t\t\t\t\tvalidation: {\n\t\t\t\t\t\t\tminDate: {\n\t\t\t\t\t\t\t\tvalue: new Date()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\tonConfirm: (response) => {\n\t\t\t\t\tshowAlert({title: 'Result', text: JSON.stringify(response)});\n\t\t\t\t}\n\t\t\t})}>\n\t\t\t\tInput Dialog With Multiple Input Fields\n\t\t\t</div>\n\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n\t\t\t\ttitle: 'Title',\n\t\t\t\tinputs: [{inputType: 'text', name: 'test'}],\n\t\t\t\tonConfirm: (response) => {\n\t\t\t\t\tshowAlert({title: 'Result', text: JSON.stringify(response)});\n\t\t\t\t}\n\t\t\t})}>Input Dialog With Text Field\n\t\t\t</div>\n\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n\t\t\t\ttitle: 'Title',\n\t\t\t\tinputs: [{inputType: 'date', name: 'test'}],\n\t\t\t\tonConfirm: (response) => {\n\t\t\t\t\tshowAlert({title: 'Result', text: JSON.stringify(response)});\n\t\t\t\t}\n\t\t\t})}>Input Dialog With Date\n\t\t\t</div>\n\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n\t\t\t\ttitle: 'Title',\n\t\t\t\tinput: {inputType: 'image', name: 'myimage'},\n\t\t\t\tonConfirm: (response) => {\n\t\t\t\t\tshowAlert({title: 'Result', text: JSON.stringify(response)});\n\t\t\t\t}\n\t\t\t})}>Input Dialog With Date\n\t\t\t</div>\n\n\t\t\t<h2>Toast</h2>\n\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={callMe}>Toast Outside of Component\n\t\t\t</div>\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showToast({\n\t\t\t\ttext: 'Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum',\n\t\t\t\ttype: DialogType.INFO,\n\t\t\t\ttimeoutDuration: 5000\n\t\t\t})}>Toast\n\t\t\t</div>\n\n\t\t\t<div className={'example-button'} style={buttonStyles} onClick={() => showToast({\n\t\t\t\tcustomComponent: <TestComponent a={'test'}/>,\n\t\t\t\ttype: DialogType.INFO,\n\t\t\t\ttimeoutDuration: 5000,\n\t\t\t})}>Custom Content Toast\n\t\t\t</div>\n\t\t</>\n\t)\n};\n\nconst App = () => {\n\treturn (\n\t\t<MyComponent/>\n\t)\n}\n\nexport const Setup = () => {\n\treturn (\n\t\t<PopupProvider>\n\t\t\t<App/>\n\t\t</PopupProvider>\n\t)\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Setup } from './TestApp'\n\nReactDOM.render(<Setup />, document.getElementById('root'))\n"],"sourceRoot":""}