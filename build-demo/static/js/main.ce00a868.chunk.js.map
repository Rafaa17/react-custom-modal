{"version":3,"sources":["lib/Toast.tsx","lib/SvgIcons.tsx","lib/Modal.tsx","lib/component.tsx","lib/Header.tsx","lib/Footer.tsx","lib/Input.tsx","lib/ImageInput.tsx","lib/Dialog.tsx","lib/index.tsx","TestApp.tsx","index.js"],"names":["ToastPosition","closeIcon","color","height","width","aria-hidden","data-prefix","data-icon","className","xmlns","viewBox","fill","d","iconIllustrationTypes","warning","info","success","danger","DefaultToastPosition","BOTTOM_RIGHT","Toast","toasts","hideToast","map","toast","ToastItem","key","id","timeout","useState","toastData","setToast","in","out","animation","setAnimation","useEffect","hideMe","showMe","timeoutDuration","setTimeout","clearTimeout","useCallback","BOTTOM_CENTER","type","style","containerStyle","display","flexDirection","alignItems","customComponent","textStyle","text","cursor","onClick","Modal","hideModal","Component","ComponentJSX","componentProps","undefined","ModalToRender","setModalToRender","animationType","outAnimationType","allowOutsideClick","c","createElement","ModalBackdrop","document","body","classList","add","remove","ModalWrapper","children","ModalRoot","usePopup","componentJSX","component","Header","showCloseButton","title","headerTextStyle","headerStyle","position","right","Footer","optionsToRender","footerStyle","option","index","name","Input","item","setInputValues","inputValues","textAlign","marginBottom","label","inputType","onChange","val","nativeEvent","target","value","placeholder","ImageInput","inputRef","useRef","current","click","ref","multiple","event","files","imagePromises","images","Array","from","forEach","file","push","Promise","resolve","reader","FileReader","onload","e","src","result","readAsDataURL","all","then","readImage","image","alt","maxHeight","slice","borderRadius","top","Date","prototype","toDateInputValue","local","this","setMinutes","getMinutes","getTimezoneOffset","toJSON","AnimationType","OutAnimationType","DialogType","Dialog","props","optionButtons","onConfirm","onCancel","isAlert","isInput","confirmText","cancelText","inputs","onDismissed","input","bodyComponent","defaultVals","default","i","getDefaultValues","inputsToRender","DefaultPopupActions","showModal","_component","_options","showAlert","hideAlert","showOptionDialog","showInputDialog","showToast","_toastId","ExportedPopupActions","ModalContext","createContext","Provider","reducer","Consumer","state","modalProps","findIndex","t","Error","PopupProvider","initialState","options","dispatch","isInputDialog","Math","random","toString","substring","toastId","useReducer","useContext","callMe","PopupActions","DANGER","MyComponent","TestComponent","background","padding","fontWeight","fontSize","JSON","stringify","buttonStyles","marginTop","a","SLIDE_IN_UP","SLIDE_OUT_UP","FADE_IN","FADE_OUT","WARNING","ZOOM_IN","SUCCESS","INFO","response","App","Setup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ce00a868.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport {AnimationType, IToast, ToastOptions} from \"./index\";\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\n\ninterface IToasts {\n    toasts?: Array<IToast>;\n    hideToast: (toastId: string) => void;\n}\n\nexport enum ToastPosition {\n    TOP_RIGHT = 'top-right',\n    BOTTOM_RIGHT = 'bottom-right',\n    BOTTOM_CENTER = 'bottom-center'\n}\n\nlet DefaultToastPosition = ToastPosition.BOTTOM_RIGHT;\n\nexport const setToastPosition = (position: ToastPosition) => {\n    DefaultToastPosition = position;\n}\n\nexport default function Toast({toasts, hideToast}: IToasts) {\n\n    return (\n        <div className={`react-custom-toast-container react-custom-toast-${DefaultToastPosition}`}>\n            {toasts && toasts.map(toast => <ToastItem key={toast.id} toast={toast} hideToast={hideToast}/>)}\n        </div>\n    )\n\n}\n\ninterface IProps {\n    toast: IToast,\n    animationType?: AnimationType;\n    hideToast: (toastId: string) => void;\n}\n\nfunction ToastItem({toast, hideToast}: IProps) {\n\n    const [toastData, setToast] = useState<ToastOptions | null>(null);\n\n    const [animation, setAnimation] = useState<{ in: string, out: string }>({in: '', out: ''});\n\n    let timeout: NodeJS.Timeout;\n\n    useEffect(() => {\n        if (toastData && !toast) {\n            hideMe();\n        } else if (toast && !toastData) {\n            showMe();\n            if (toast.timeoutDuration) {\n                timeout = setTimeout(hideMe, toast.timeoutDuration)\n            }\n\n        }\n        return () => clearTimeout(timeout);\n    }, [toast])\n\n    useEffect(() => {\n\n        if (animation.in && toast) {\n            setToast(toast);\n        }\n\n        if (animation.out) {\n            timeout = setTimeout(() => {\n                setToast(null);\n                hideToast(toast.id);\n            }, 500);\n        }\n\n    }, [animation])\n\n    const hideMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({out: 'animate__animated animate__slideOutDown animate__faster', in: ''})\n        } else {\n            setAnimation({out: 'animate__animated animate__slideOutRight animate__faster', in: ''})\n        }\n    }, []);\n\n    const showMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({in: 'animate__animated animate__slideInUp animate__faster', out: ''})\n        } else {\n            setAnimation({in: 'animate__animated animate__slideInRight animate__faster', out: ''})\n        }\n    }, []);\n\n    if (!toastData)\n        return null;\n\n    return (\n        <div className={`react-custom-toast-${toastData.type} react-custom-toast ${animation.in} ${animation.out}`}\n             style={{...toast.containerStyle}}>\n            <div style={{\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center'\n            }}>\n                {toast.customComponent || (\n                    <>\n                        <div>\n                            {iconIllustrationTypes[toastData.type]}\n                        </div>\n                        <div className={'react-custom-toast-text'} style={{...toast.textStyle}}>\n                            {toastData.text}\n                        </div>\n                    </>\n                )}\n            </div>\n            <div style={{width: \"10%\", cursor: 'pointer'}}\n                 onClick={hideMe}>{closeIcon()}</div>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport const closeIcon = (color:string = '#484848') => <svg color={color} height={20} width={20} aria-hidden=\"true\" data-prefix=\"fas\"\n                                    data-icon=\"times\"\n                                    className=\"svg-inline--fa fa-times fa-w-11\" xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 352 512\">\n    <path fill=\"currentColor\"\n          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"/>\n</svg>;\n\nexport const iconIllustrationTypes = {\n    warning: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 0C115.2 0 0 115.2 0 256s115.2 256 256 256 256-115.2 256-256S396.8 0 256 0zm0 51.2c28.16 0 48.64 23.04 46.08 51.2L281.6 307.2h-51.2l-20.48-204.8c-2.56-28.16 17.92-51.2 46.08-51.2zm0 409.6c-28.16 0-51.2-23.04-51.2-51.2 0-28.16 23.04-51.2 51.2-51.2s51.2 23.04 51.2 51.2c0 28.16-23.04 51.2-51.2 51.2z\"/></svg>,\n    info: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 450.56 450.56\"><path d=\"M225.28 0C101.376 0 0 101.376 0 225.28s101.376 225.28 225.28 225.28 225.28-101.376 225.28-225.28S349.184 0 225.28 0zm23.552 321.024h-48.128V183.296h48.128v137.728zm0-167.424h-48.128v-30.208h48.128V153.6z\"/></svg>,\n    success: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 477.867 477.867\"><path d=\"M238.933 0C106.974 0 0 106.974 0 238.933s106.974 238.933 238.933 238.933 238.933-106.974 238.933-238.933C477.726 107.033 370.834.141 238.933 0zm131.533 165.666L199.799 336.333c-6.665 6.663-17.468 6.663-24.132 0L107.4 268.066c-6.78-6.548-6.968-17.352-.42-24.132 6.548-6.78 17.352-6.968 24.132-.42.142.138.282.277.42.42l56.201 56.201 158.601-158.601c6.78-6.548 17.584-6.36 24.132.419 6.388 6.614 6.388 17.099 0 23.713z\"/></svg>,\n    danger: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\"   viewBox=\"0 0 512 512\"><path d=\"M501.362 383.95L320.497 51.474c-29.059-48.921-99.896-48.986-128.994 0L10.647 383.95c-29.706 49.989 6.259 113.291 64.482 113.291h361.736c58.174 0 94.203-63.251 64.497-113.291zM256 437.241c-16.538 0-30-13.462-30-30s13.462-30 30-30 30 13.462 30 30-13.462 30-30 30zm30-120c0 16.538-13.462 30-30 30s-30-13.462-30-30v-150c0-16.538 13.462-30 30-30s30 13.462 30 30v150z\"/></svg>\n}\n\n","import React, {createElement, useCallback, useEffect, useState} from 'react';\n\ninterface IProps {\n    hideModal: () => void;\n    Component?: () => JSX.Element;\n    ComponentJSX?: JSX.Element;\n    componentProps: React.ComponentProps<any>\n}\n\nexport default function Modal({hideModal, Component, ComponentJSX, componentProps}: IProps) {\n\n    const [ModalToRender, setModalToRender] = useState<JSX.Element | undefined>(undefined);\n\n    const [animation, setAnimation] = useState<{ in: string, out: string }>({in: '', out: ''});\n\n    const {animationType, outAnimationType, allowOutsideClick = true} = componentProps;\n\n    let timeout: NodeJS.Timeout;\n\n    useEffect(() => {\n        if (ModalToRender && !(Component || ComponentJSX)) {\n            hideMe();\n        } else if (Component || ComponentJSX) {\n            showMe();\n        }\n        return () => clearTimeout(timeout);\n    }, [Component, ComponentJSX, componentProps])\n\n    useEffect(() => {\n\n        if (animation.in && (Component || ComponentJSX)) {\n            // @ts-ignore\n            let c: JSX.Element | undefined;\n            if (Component) {\n                c = createElement(Component, {\n                    ...componentProps, hideModal: hideModal\n                });\n            }\n            setModalToRender(ComponentJSX || c);\n        }\n\n        if (animation.out) {\n            if (!outAnimationType) {\n                setModalToRender(undefined);\n            } else\n                timeout = setTimeout(() => {\n                    setModalToRender(undefined);\n                }, 600);\n        }\n\n    }, [animation])\n\n    const hideMe = useCallback(() => {\n        setAnimation({out: `animate__animated animate__${outAnimationType} animate__faster`, in: ''})\n    }, [outAnimationType]);\n\n    const showMe = useCallback(() => {\n        setAnimation({out: '', in: `animate__animated animate__${animationType} animate__faster`})\n    }, [animationType]);\n\n    if (!ModalToRender)\n        return null;\n\n    return (\n        <ModalWrapper>\n            <ModalBackdrop onClick={allowOutsideClick ? hideModal : ()=>{}}/>\n            <div className={animation.in || animation.out}>\n                {ModalToRender}\n            </div>\n        </ModalWrapper>\n    )\n\n}\n\nconst ModalBackdrop = ({onClick}: { onClick: () => void }) => {\n    useEffect(() => {\n        document.body.classList.add(\"react-custom-modal-open\");\n\n        return () => {\n            document.body.classList.remove(\"react-custom-modal-open\");\n        };\n    }, []);\n\n    return (\n        <div\n            onClick={onClick}\n            className={`react-custom-modal-backdrop`}\n        >\n        </div>\n    );\n};\n\nconst ModalWrapper = ({children}: { children: any }) => (\n    <div className=\"react-custom-modal-wrapper\">{children}</div>\n);","import React from \"react\";\n\nimport \"./index.scss\";\nimport \"./animate.css\";\nimport {usePopup} from \"./index\";\nimport Toast from \"./Toast\";\nimport Modal from \"./Modal\";\n\nexport const ModalRoot = () => {\n\n    let {\n        componentJSX: ComponentJSX,\n        component: Component,\n        toasts,\n        componentProps,\n        hideModal,\n        hideToast,\n    } = usePopup();\n\n    componentProps = {...componentProps}\n\n    return (\n        <>\n            <Modal componentProps={componentProps} Component={Component} ComponentJSX={ComponentJSX}\n                   hideModal={hideModal} />\n            <Toast hideToast={hideToast} toasts={toasts}/>\n        </>\n    )\n\n};\n","import React from 'react';\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\nimport {DialogType} from \"./index\";\n\ninterface IProps {\n    showCloseButton: boolean;\n    type: DialogType;\n    hideModal: () => void;\n    title: string;\n    headerTextStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n}\n\nconst Header = ({showCloseButton, type, hideModal, title, headerTextStyle, headerStyle}: IProps) => {\n\n    return (\n        <div className={`react-custom-header react-custom-header-${type}`} style={{...headerStyle}}>\n            {iconIllustrationTypes[type]}\n            {showCloseButton && (\n                <div style={{position: 'absolute', right: 20, cursor: 'pointer'}}\n                     onClick={hideModal}>{closeIcon()}</div>\n            )}\n            <div className={`react-custom-title ${iconIllustrationTypes[type] ? 'react-custom-title-margin' : ''}`} style={{...headerTextStyle}}>{title}</div>\n        </div>\n    )\n\n}\n\nexport default Header;","import React from 'react';\n\ninterface IProps {\n    optionsToRender: Array<any>;\n    footerStyle?: React.CSSProperties;\n}\n\nexport default function Footer({optionsToRender, footerStyle}: IProps) {\n\n    return (\n        <div className={'react-custom-footer'} style={{...footerStyle}}>\n            <div className={'react-custom-options-container'}>\n                {optionsToRender.map((option,index) => (\n                    <button key={`option${index}`} className={'react-custom-option-button'} onClick={option.onClick}>\n                        {option.name}\n                    </button>\n                ))}\n            </div>\n        </div>\n    )\n\n\n}","import React, {Dispatch, SetStateAction} from 'react';\nimport {InputProps} from \"./index\";\n\ninterface IProps {\n    item: InputProps;\n    setInputValues: Dispatch<SetStateAction<{[key:string]:any}>>;\n    inputValues: {};\n}\n\nexport default function Input({item, setInputValues, inputValues}: IProps) {\n\n    return (\n        <div style={{textAlign: \"left\"}}>\n            <label style={{display: \"block\", marginBottom: 5}}>\n                {item.label}\n            </label>\n            {item.inputType && item.inputType !== \"textarea\" ? (\n                <input\n                    className={'react-custom-input-item'}\n                    onChange={(val) => {\n                        setInputValues({\n                            ...inputValues,\n                            // @ts-ignore\n                            [item.name]: val.nativeEvent.target.value,\n                        });\n                    }}\n                    // @ts-ignore\n                    value={\n                        inputValues[item.name] ? inputValues[item.name] : ''\n                    }\n                    id={item.name}\n                    placeholder={item.placeholder}\n                    type={item.inputType || \"text\"}\n                />\n            ) : null}\n            {item.inputType === \"textarea\" ? (\n                <textarea\n                    onChange={(val) => {\n                        setInputValues({\n                            ...inputValues,\n                            // @ts-ignore\n                            [item.name]: val.nativeEvent.target.value,\n                        });\n                    }}\n                    // @ts-ignore\n                    value={\n                        inputValues[item.name] ? inputValues[item.name] : ''\n                    }\n                    className={'react-custom-input-item'}\n                    id={item.name}\n                    placeholder={item.placeholder}\n                />\n            ) : null}\n        </div>\n    )\n\n}","import React, {ChangeEvent, Dispatch, SetStateAction, useRef} from 'react';\nimport {ImageInputProps, InputProps} from \"./index\";\nimport {closeIcon} from \"./SvgIcons\";\n\ninterface IProps {\n    setInputValues: Dispatch<SetStateAction<{ [key: string]: any }>>;\n    inputValues: { [key: string]: any };\n    item: InputProps;\n}\n\nexport default function ImageInput({setInputValues, inputValues, item}: IProps) {\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const readImage = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files) {\n            let imagePromises: Array<Promise<void>> = [];\n            let images: Array<any> = [];\n            Array.from(event.target.files).forEach((file: File) => {\n                imagePromises.push(\n                    new Promise((resolve) => {\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            images.push({src: e.target!.result, value: file});\n                            resolve();\n                        };\n                        reader.readAsDataURL(file);\n                    })\n                );\n            });\n            Promise.all(imagePromises).then(() => {\n                setInputValues({\n                    ...inputValues,\n                    // @ts-ignore\n                    [item.name]: [...images],\n                });\n                inputRef.current!.value! = \"\";\n                // event.target.reset();\n            });\n        }\n    };\n\n    return (\n        <>\n            <div style={{textAlign: \"left\"}}>\n                <label style={{display: \"block\", marginBottom:5}}>{item.label || ''}</label>\n                <div\n                    style={{cursor:'pointer'}}\n                    className={'react-custom-input-item select-image'}\n                    onClick={() => {\n                        if (inputRef.current) inputRef.current.click();\n                    }}\n                >\n                    Select Image\n                </div>\n                <input\n                    ref={(ref) => {\n                        // @ts-ignore\n                        inputRef.current = ref;\n                    }}\n                    value={inputRef.current ? inputRef.current.value : \"\"}\n                    multiple={(item as ImageInputProps).multiple || false}\n                    className={'react-custom-input-item'}\n                    onChange={(val) => readImage(val)}\n                    style={{display: \"none\"}}\n                    id={\"image\"}\n                    type={\"file\"}\n                />\n            </div>\n            <div style={{textAlign: \"left\"}}>\n                {inputValues &&\n                inputValues[item.name] &&\n                // @ts-ignore\n                inputValues[item.name].map((image, index) => (\n                    <div\n                        className={'react-custom-input-img-container'}\n                        key={'image' + index}\n                        style={{\n                            position: \"relative\",\n                        }}\n                    >\n                        <img alt=\"\" style={{maxHeight: 100}} src={image.src}/>\n                        <div\n                            onClick={() =>\n                                setInputValues({\n                                    ...inputValues,\n                                    // @ts-ignore\n                                    images: [\n                                        ...inputValues[item.name].slice(0, index),\n                                        ...inputValues[item.name].slice(index + 1),\n                                    ],\n                                })\n                            }\n                            style={{\n                                borderRadius: 5,\n                                position: \"absolute\",\n                                top: 5,\n                                right: 5,\n                            }}\n                        >\n                            {closeIcon('white')}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n\n}","import React, {useState} from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {DialogType, InputProps, OptionDialogButton} from \"./index\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Input from \"./Input\";\nimport ImageInput from \"./ImageInput\";\n\n// @ts-ignore\nDate.prototype.toDateInputValue = function () {\n    var local = new Date(this);\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n};\n\ninterface DialogProps {\n    title: string,\n    text: string,\n    type: DialogType,\n    hideModal: () => {},\n    optionButtons: Array<OptionDialogButton>,\n    onConfirm: (result?: { [key: string]: any }) => {},\n    onCancel: (result?: { [key: string]: any }) => {},\n    isAlert: boolean,\n    isInput: boolean,\n    confirmText: string,\n    cancelText: string,\n    showCloseButton: boolean,\n    inputs: Array<InputProps>,\n    onDismissed: (result?: { [key: string]: any }) => {},\n    onOpened: (result?: { [key: string]: any }) => {},\n    input: InputProps,\n    headerTextStyle?: React.CSSProperties;\n    textStyle?: React.CSSProperties;\n    containerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    bodyComponent?: JSX.Element;\n}\n\nconst Dialog = (props: DialogProps) => {\n\n    const {\n        title,\n        text,\n        type,\n        hideModal,\n        optionButtons = null,\n        onConfirm = null,\n        onCancel = null,\n        isAlert = true,\n        showCloseButton = false,\n        isInput = false,\n        confirmText = \"Ok\",\n        cancelText = \"Cancel\",\n        inputs = null,\n        onDismissed = null,\n        input,\n        headerTextStyle,\n        textStyle,\n        containerStyle,\n        headerStyle,\n        footerStyle,\n        bodyComponent\n    } = props;\n\n    const getDefaultValues = () => {\n\n        let defaultVals = {};\n\n        if (input && !inputs && input.default) {\n            if (input.inputType === 'date') {\n                // @ts-ignore\n                defaultVals[input.name] = (input.default as Date).toDateInputValue();\n            } else {\n                defaultVals[input.name] = input.default;\n            }\n        }\n        if (inputs && !input) {\n\n            inputs.forEach(i => {\n                if (i.default) {\n                    if (i.inputType === 'date') {\n                        // @ts-ignore\n                        defaultVals[i.name] = (i.default as Date).toDateInputValue();\n                    } else {\n                        defaultVals[i.name] = i.default;\n                    }\n                }\n            })\n        }\n\n        return defaultVals;\n    }\n\n    const [inputValues, setInputValues] = useState<{ [key: string]: any }>(() => getDefaultValues());\n\n    let optionsToRender = [];\n\n    if (!isAlert)\n        if (optionButtons) optionsToRender = optionButtons;\n        else\n            optionsToRender = [\n                {\n                    name: cancelText,\n                    onClick: () => {\n                        hideModal();\n                        if (onCancel) onCancel();\n                        if (onDismissed && isInput) onDismissed(inputValues);\n                    },\n                },\n                {\n                    name: confirmText,\n                    onClick: () => {\n                        hideModal();\n                        if (onConfirm) onConfirm(inputValues);\n                        if (onDismissed && isInput) onDismissed(inputValues);\n                    },\n                },\n            ];\n    else\n        optionsToRender = [\n            {\n                name: confirmText,\n                onClick: () => {\n                    hideModal();\n                },\n            },\n        ];\n\n    let inputsToRender: InputProps[] = [];\n\n    if (isInput) {\n        if (!inputs) inputsToRender = [input];\n        else inputsToRender = inputs;\n    }\n\n    return (\n        <div className={'react-custom-dialog-wrapper'} style={{...containerStyle}}>\n            <Header headerStyle={headerStyle} headerTextStyle={headerTextStyle} showCloseButton={showCloseButton}\n                    type={type}\n                    hideModal={hideModal} title={title}/>\n            {bodyComponent || (\n                <>\n                    {text && text !== \"\" ?\n                        <div className={'react-custom-body-text'} style={{...textStyle}}>{text}</div> : null}\n                    {isInput && (\n                        <div className={'react-custom-inputs-container'}>\n                            <>\n                                {inputsToRender.map((item, index) =>\n                                    <div key={`input${index}`} className={'react-custom-input-container'}>\n                                        {item.inputType !== 'image' ? (\n                                                <Input item={item} setInputValues={setInputValues}\n                                                       inputValues={inputValues}/>) :\n                                            <ImageInput item={item} setInputValues={setInputValues}\n                                                        inputValues={inputValues}/>}\n                                    </div>\n                                )}\n                            </>\n                        </div>\n                    )}\n                </>\n            )\n            }\n            <Footer footerStyle={footerStyle} optionsToRender={optionsToRender}/>\n        </div>\n    );\n};\n\nexport default Dialog;\n","import React, {\n    createContext,\n    useContext,\n    useReducer\n} from \"react\";\nimport {ModalRoot} from \"./component\";\nimport Dialog from \"./Dialog\";\nimport {ToastPosition} from \"./Toast\";\n\nexport enum AnimationType {\n    FADE_IN = 'fadeIn',\n    FADE_IN_UP = 'fadeInUp',\n    FLASH = 'flash',\n    HEART_BEAT = 'heartBeat',\n    SLIDE_IN_LEFT = 'slideInLeft',\n    SLIDE_IN_RIGHT = 'slideInRight',\n    SLIDE_IN_UP = 'slideInUp',\n    SWING = 'swing',\n    ZOOM_IN = 'zoomIn'\n}\n\nexport enum OutAnimationType {\n    FADE_OUT = 'fadeOut',\n    SLIDE_OUT_LEFT = 'slideOutLeft',\n    SLIDE_OUT_RIGHT = 'slideOutRight',\n    SLIDE_OUT_UP = 'slideOutUp',\n    ZOOM_OUT = 'zoomOut'\n}\n\nexport enum DialogType {\n    WARNING = 'warning',\n    INFO = 'info',\n    DANGER = 'danger',\n    SUCCESS = 'success'\n}\n\nexport interface OptionDialogButton {\n    name: string;\n    onClick: () => void;\n    color?: string;\n}\n\ninterface OptionDialogOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    cancelText?: string;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    onCancel?: () => void;\n    onConfirm?: () => void;\n    optionButtons?: Array<OptionDialogButton>;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string,\n    type?: DialogType;\n    bodyComponent?: JSX.Element;\n    allowOutsideClick?: boolean;\n}\n\nexport interface InputProps {\n    default?: string | Date | number;\n    inputType: 'text' | 'file' | 'number' | 'textarea' | 'date' | 'image';\n    label?: string;\n    /*\n        The name that will be used in the response to read the value\n     */\n    name: string;\n    placeholder?: string;\n}\n\nexport interface ImageInputProps extends InputProps{\n    inputType: 'image';\n    multiple?: boolean;\n}\n\ninterface InputDialogOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    cancelText?: string;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    input?: InputProps | ImageInputProps;\n    inputs?: Array<InputProps | ImageInputProps>;\n    onCancel?: () => void;\n    onConfirm?: (result: { [key: string]: any }) => void;\n    onDismissed?: () => void;\n    options?: Array<OptionDialogButton>;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string;\n    type?: DialogType;\n    allowOutsideClick?: boolean;\n}\n\ninterface AlertOptions {\n    animationType?: AnimationType;\n    outAnimationType?: OutAnimationType;\n    confirmText?: string;\n    containerStyle?: React.CSSProperties;\n    footerStyle?: React.CSSProperties;\n    headerStyle?: React.CSSProperties;\n    headerTextStyle?: React.CSSProperties;\n    showCloseButton?: boolean;\n    text?: string;\n    textStyle?: React.CSSProperties;\n    title?: string;\n    type?: DialogType;\n    bodyComponent?: JSX.Element;\n    allowOutsideClick?: boolean;\n}\n\nexport interface ToastOptions {\n    containerStyle?: React.CSSProperties;\n    customComponent?: JSX.Element;\n    position?: ToastPosition;\n    text?: string;\n    textStyle?: React.CSSProperties,\n    timeoutDuration?: number;\n    type: DialogType;\n    showCloseButton?: boolean;\n}\n\nexport type IToast = ToastOptions & { id: string };\n\nexport interface ModalOptions {\n    animationType?: AnimationType,\n    outAnimationType?: OutAnimationType,\n    timeoutDuration?: number;\n}\n\ninterface PopupContext {\n    component?: () => JSX.Element;\n    componentJSX?: JSX.Element;\n    componentProps?: React.ComponentProps<any>;\n    toasts?: Array<IToast>;\n    showModal: (component: JSX.Element, options?: ModalOptions) => void;\n    hideModal: () => void;\n    showAlert: (options: AlertOptions) => void;\n    hideAlert: () => void;\n    showOptionDialog: (options: OptionDialogOptions) => void;\n    showInputDialog: (options: InputDialogOptions) => void;\n    showToast: (options: ToastOptions) => void;\n    hideToast: (toastId: string) => void;\n}\n\nlet DefaultPopupActions: PopupContext = {\n    showModal: (_component: JSX.Element, _options?: ModalOptions) => null,\n    hideModal: () => null,\n    showAlert: (_options: AlertOptions) => null,\n    hideAlert: () => null,\n    showOptionDialog: (_options: OptionDialogOptions) => null,\n    showInputDialog: (_options: InputDialogOptions) => null,\n    showToast: (_options: ToastOptions) => null,\n    hideToast: (_toastId: string) => null,\n}\n\nlet ExportedPopupActions: Omit<PopupContext, 'componentProps' | 'component' | 'componentJSX' | 'toasts'> = {\n    ...DefaultPopupActions\n}\n\nconst ModalContext = createContext<PopupContext>(DefaultPopupActions);\n\nconst {Provider, Consumer: ModalConsumer} = ModalContext;\n\nconst reducer = (state: any, {\n    type,\n    component,\n    componentProps,\n    componentJSX,\n    toast,\n    id\n}: { type: 'openModal' | 'hideModal' | 'showToast' | 'hideToast', componentJSX?: JSX.Element, component?: any, componentProps?: any, toast?: IToast, id?: string }) => {\n    switch (type) {\n        case \"openModal\":\n            return {...state, component, componentProps, componentJSX};\n        case \"hideModal\":\n            return {...state, component: null, modalProps: {}, componentJSX: null};\n        case \"showToast\":\n            return {...state, toasts: [...state.toasts, toast], componentProps};\n        case \"hideToast\":\n            const index = state.toasts.findIndex((t: { id: string | undefined; }) => t.id === id);\n            return {...state, toasts: [...state.toasts.slice(0, index), ...state.toasts.slice(index + 1)]};\n        default:\n            throw new Error(\"Unspecified reducer action\");\n    }\n};\n\nconst PopupProvider = ({children}: { children: any }) => {\n\n    const initialState: PopupContext = {\n        componentJSX: undefined,\n        component: undefined,\n        componentProps: {},\n        toasts: [],\n        showModal: (componentJSX: JSX.Element, options?: ModalOptions) => {\n            dispatch({type: \"openModal\", componentJSX, componentProps: {...options}});\n        },\n        hideModal: () => {\n            dispatch({type: \"hideModal\"});\n        },\n        showAlert: (options: AlertOptions) => {\n            dispatch({\n                    type: 'openModal',\n                    component: Dialog, componentProps: {isAlert: true, isInputDialog: false, ...options}\n                }\n            )\n        },\n        hideAlert: () => {\n            dispatch({type: \"hideModal\"})\n        },\n        showOptionDialog: (options: OptionDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: false,\n                    ...options\n                }\n            });\n        },\n        showInputDialog: (options: InputDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: true,\n                    ...options\n                }\n            });\n        },\n        showToast: (options: ToastOptions) => {\n            dispatch({\n                type: 'showToast',\n                toast: {...options, id: Math.random().toString(36).substring(7)},\n                componentProps: {...options}\n            })\n        },\n        hideToast: (toastId?: string) => {\n            dispatch({\n                type: 'hideToast',\n                id: toastId\n            })\n        }\n    };\n\n    ExportedPopupActions = initialState;\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <div>\n            <Provider value={state}>\n                <ModalRoot/>\n                {children}\n            </Provider>\n        </div>\n    );\n};\n\nconst usePopup = () => useContext(ModalContext);\n\n\nexport {ModalConsumer, PopupProvider, usePopup, ExportedPopupActions as PopupActions};","import React from 'react';\nimport {AnimationType, DialogType, OutAnimationType, PopupActions, PopupProvider, usePopup} from './lib'\n\nimport './TestApp.css'\n\nfunction callMe() {\n    PopupActions.showToast({text: 'test', type: DialogType.DANGER});\n}\n\nconst MyComponent = () => {\n\n    const TestComponent = (props: { a: string }) => {\n\n        return (\n            <div style={{background: 'white', borderRadius: 5, width: 500, padding: 20}}>\n                <h4> Fantasy T-shirt</h4>\n                <label className={\"text-muted\"}>Shirts</label>\n                <h3 className={\"mt-3\"} style={{fontWeight: 600, fontSize: \"20px\"}}>\n                    $39.99\n                </h3>\n                <p className={\"mt-3\"}>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam,\n                    sapiente illo. Sit error voluptas repellat rerum quidem, soluta enim\n                    perferendis voluptates laboriosam. Distinctio, officia quis dolore\n                    quos sapiente tempore alias.\n                </p>\n                Received\n                Props: {JSON.stringify(props)}\n            </div>\n        )\n\n    }\n\n    const {showAlert, showOptionDialog, showInputDialog, showModal, showToast} = usePopup();\n\n    const buttonStyles: React.CSSProperties = {\n        display: 'block',\n        marginTop: 5\n    }\n\n    return (\n        <>\n            <h2>Modal</h2>\n            <div className={'example-button'} style={buttonStyles}\n                 onClick={() => showModal(<TestComponent a={'test'}/>, {\n                     animationType: AnimationType.SLIDE_IN_UP,\n                     outAnimationType: OutAnimationType.SLIDE_OUT_UP\n                 })}>Modal\n            </div>\n\n            <h2>Alert</h2>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n                type: DialogType.DANGER,\n                text: 'Text',\n                title: 'Title',\n                animationType: AnimationType.FADE_IN,\n                outAnimationType: OutAnimationType.FADE_OUT\n            })}>Danger Alert\n            </div>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n                type: DialogType.WARNING,\n                text: 'Text',\n                title: 'Title',\n                animationType: AnimationType.ZOOM_IN\n            })}>Warning Alert\n            </div>\n            <div className={'example-button'} style={buttonStyles}\n                 onClick={() => showAlert({\n                     type: DialogType.SUCCESS, text: 'Text',\n                     title: 'Title',\n                 })}>Success\n                Alert\n            </div>\n            <div className={'example-button'} style={buttonStyles}\n                 onClick={() => showAlert({\n                     type: DialogType.INFO, text: 'Text',\n                     title: 'Title',\n                     allowOutsideClick: false\n                 })}>Info Alert\n            </div>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showAlert({\n                type: DialogType.WARNING,\n                text: 'Text',\n                title: 'Title',\n                animationType: AnimationType.FADE_IN,\n                bodyComponent: <TestComponent a={'a'}/>\n            })}>Custom Content Alert\n            </div>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showOptionDialog({\n                text: 'Text',\n                title: 'Title',\n            })}>Option\n                Dialog\n            </div>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n                title: 'Sign Up',\n                showCloseButton: true,\n                headerTextStyle: {fontWeight: \"bold\", fontSize: \"x-large\"},\n                headerStyle: {marginTop:5, marginBottom: 5},\n                inputs: [\n                    {inputType: 'text', name: 'fname', label: 'First Name', default: 'John Doe'},\n                    {inputType: 'text', name: 'lname', label: 'Last Name'},\n                    {\n                        inputType: 'image',\n                        name: 'avatar',\n                        label: 'Avatar',\n                        multiple: true\n                    }, {\n                        inputType: 'date',\n                        name: 'dob',\n                        label: 'Date of Birth',\n                        default: new Date()\n                    }],\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>\n                Input Dialog With Multiple Input Fields\n            </div>\n\n            <div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n                title: 'Title',\n                inputs: [{inputType: 'text', name: 'test'}],\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>Input Dialog With Text Field\n            </div>\n\n            <div className={'example-button'} style={buttonStyles} onClick={() => showInputDialog({\n                title: 'Title',\n                inputs: [{inputType: 'date', name: 'test'}],\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>Input Dialog With Date\n            </div>\n\n            <h2>Toast</h2>\n\n            <div className={'example-button'} style={buttonStyles} onClick={callMe}>Toast Outside of Component\n            </div>\n            <div className={'example-button'} style={buttonStyles} onClick={() => showToast({\n                text: 'Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum',\n                type: DialogType.INFO,\n                timeoutDuration: 5000\n            })}>Toast\n            </div>\n\n            <div className={'example-button'} style={buttonStyles} onClick={() => showToast({\n                customComponent: <TestComponent a={'test'}/>,\n                type: DialogType.INFO,\n                timeoutDuration: 5000,\n            })}>Custom Content Toast\n            </div>\n        </>\n    )\n};\n\nconst App = () => {\nreturn (\n        <MyComponent/>\n            )\n            }\n\n            export const Setup = () => {\n            return (\n            <PopupProvider>\n            <App/>\n            </PopupProvider>\n            )\n        }\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Setup } from './TestApp'\n\nReactDOM.render(<Setup />, document.getElementById('root'))\n"],"sourceRoot":""}