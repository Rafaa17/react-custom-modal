{"version":3,"sources":["lib/Toast.tsx","lib/SvgIcons.tsx","lib/Modal.tsx","lib/component.tsx","lib/Header.tsx","lib/Footer.tsx","lib/Input.tsx","lib/ImageInput.tsx","lib/Dialog.tsx","lib/index.tsx","TestApp.tsx","index.js"],"names":["ToastPosition","closeIcon","color","height","width","aria-hidden","data-prefix","data-icon","className","xmlns","viewBox","fill","d","iconIllustrationTypes","warning","info","success","danger","DefaultToastPosition","BOTTOM_RIGHT","Toast","toasts","hideToast","map","toast","ToastItem","key","id","timeout","useState","toastData","setToast","in","out","animation","setAnimation","useEffect","hideMe","showMe","timeoutDuration","setTimeout","clearTimeout","useCallback","BOTTOM_CENTER","type","style","containerStyle","display","flexDirection","alignItems","textStyle","text","cursor","onClick","Modal","hideModal","animationType","Component","ComponentJSX","componentProps","animationClass","AnimationType","FADE_IN","HEART_BEAT","FLASH","SWING","ZOOM_IN","SLIDE_IN_LEFT","SLIDE_IN_RIGHT","ModalBackdrop","document","body","classList","add","remove","ModalWrapper","children","ModalRoot","usePopup","componentJSX","component","Header","showCloseButton","title","position","right","Footer","optionsToRender","option","index","name","Input","item","setInputValues","inputValues","textAlign","marginBottom","label","inputType","onChange","val","nativeEvent","target","value","placeholder","ImageInput","inputRef","useRef","padding","borderRadius","boxShadow","current","click","multiple","images","length","margin","ref","event","files","imagePromises","Array","from","forEach","file","push","Promise","resolve","reader","FileReader","onload","e","src","result","readAsDataURL","all","then","readImage","image","alt","maxHeight","slice","top","DialogType","Dialog","props","optionButtons","onConfirm","onCancel","isAlert","isInput","confirmText","cancelText","inputs","onDismissed","input","inputsToRender","DefaultPopupActions","showModal","_component","showAlert","_options","hideAlert","showOptionDialog","showInputDialog","showToast","_toastId","ExportedPopupActions","ModalContext","createContext","Provider","reducer","Consumer","state","modalProps","findIndex","t","Error","PopupProvider","initialState","undefined","dispatch","options","isInputDialog","Math","random","toString","substring","toastId","useReducer","onKeyDown","addEventListener","removeEventListener","useContext","callMe","PopupActions","DANGER","MyComponent","TestComponent","background","JSON","stringify","buttonStyles","marginTop","a","WARNING","SUCCESS","INFO","response","App","Setup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f4899080.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport {AnimationType, IToast, ToastOptions} from \"./index\";\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\n\ninterface IToasts {\n    toasts?: Array<IToast>;\n    hideToast: (toastId: string) => void;\n}\n\nexport enum ToastPosition {\n    TOP_RIGHT = 'top-right',\n    BOTTOM_RIGHT = 'bottom-right',\n    BOTTOM_CENTER = 'bottom-center'\n}\n\nlet DefaultToastPosition = ToastPosition.BOTTOM_RIGHT;\n\nexport const setToastPosition = (position: ToastPosition) => {\n    DefaultToastPosition = position;\n}\n\nexport default function Toast({toasts, hideToast}: IToasts) {\n\n    return (\n        <div className={`toast-container toast-${DefaultToastPosition}`}>\n            {toasts && toasts.map(toast => <ToastItem key={toast.id} toast={toast} hideToast={hideToast}/>)}\n        </div>\n    )\n\n}\n\ninterface IProps {\n    toast: IToast,\n    animationType?: AnimationType;\n    hideToast: (toastId: string) => void;\n}\n\nfunction ToastItem({toast, hideToast}: IProps) {\n\n    const [toastData, setToast] = useState<ToastOptions | null>(null);\n\n    const [animation, setAnimation] = useState<{ in: string, out: string }>({in: '', out: ''});\n\n    let timeout: NodeJS.Timeout;\n\n    useEffect(() => {\n        if (toastData && !toast) {\n            hideMe();\n        } else if (toast && !toastData) {\n            showMe();\n            if (toast.timeoutDuration) {\n                timeout = setTimeout(hideMe, toast.timeoutDuration)\n            }\n\n        }\n        return () => clearTimeout(timeout);\n    }, [toast])\n\n    useEffect(() => {\n\n        if (animation.in && toast) {\n            setToast(toast);\n        }\n\n        if (animation.out) {\n            timeout = setTimeout(() => {\n                setToast(null);\n                hideToast(toast.id);\n            }, 500);\n        }\n\n    }, [animation])\n\n    const hideMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({out: 'animate__animated animate__slideOutDown animate__faster', in: ''})\n        } else {\n            setAnimation({out: 'animate__animated animate__slideOutRight animate__faster', in: ''})\n        }\n    }, []);\n\n    const showMe = useCallback(() => {\n        if (DefaultToastPosition === ToastPosition.BOTTOM_CENTER) {\n            setAnimation({in: 'animate__animated animate__slideInUp animate__faster', out: ''})\n        } else {\n            setAnimation({in: 'animate__animated animate__slideInRight animate__faster', out: ''})\n        }\n    }, []);\n\n    if (!toastData)\n        return null;\n\n    return (\n        <div className={`toast-${toastData.type} toast ${animation.in} ${animation.out}`} style={{...toast.containerStyle}}>\n            <div style={{\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center'\n            }}>\n                <div>\n                    {iconIllustrationTypes[toastData.type]}\n                </div>\n                <div className={'toast-text'} style={{...toast.textStyle}}>\n                    {toast.id} <br/>\n                    {toastData.text}\n                </div>\n            </div>\n            <div style={{width: \"10%\", cursor: 'pointer'}}\n                 onClick={hideMe}>{closeIcon()}</div>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport const closeIcon = () => <svg color={'#484848'} height={20} width={20} aria-hidden=\"true\" data-prefix=\"fas\"\n                                    data-icon=\"times\"\n                                    className=\"svg-inline--fa fa-times fa-w-11\" xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 352 512\">\n    <path fill=\"currentColor\"\n          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"/>\n</svg>;\n\nexport const iconIllustrationTypes = {\n    warning: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 0C115.2 0 0 115.2 0 256s115.2 256 256 256 256-115.2 256-256S396.8 0 256 0zm0 51.2c28.16 0 48.64 23.04 46.08 51.2L281.6 307.2h-51.2l-20.48-204.8c-2.56-28.16 17.92-51.2 46.08-51.2zm0 409.6c-28.16 0-51.2-23.04-51.2-51.2 0-28.16 23.04-51.2 51.2-51.2s51.2 23.04 51.2 51.2c0 28.16-23.04 51.2-51.2 51.2z\"/></svg>,\n    info: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 450.56 450.56\"><path d=\"M225.28 0C101.376 0 0 101.376 0 225.28s101.376 225.28 225.28 225.28 225.28-101.376 225.28-225.28S349.184 0 225.28 0zm23.552 321.024h-48.128V183.296h48.128v137.728zm0-167.424h-48.128v-30.208h48.128V153.6z\"/></svg>,\n    success: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 477.867 477.867\"><path d=\"M238.933 0C106.974 0 0 106.974 0 238.933s106.974 238.933 238.933 238.933 238.933-106.974 238.933-238.933C477.726 107.033 370.834.141 238.933 0zm131.533 165.666L199.799 336.333c-6.665 6.663-17.468 6.663-24.132 0L107.4 268.066c-6.78-6.548-6.968-17.352-.42-24.132 6.548-6.78 17.352-6.968 24.132-.42.142.138.282.277.42.42l56.201 56.201 158.601-158.601c6.78-6.548 17.584-6.36 24.132.419 6.388 6.614 6.388 17.099 0 23.713z\"/></svg>,\n    danger: <svg width={20} xmlns=\"http://www.w3.org/2000/svg\"   viewBox=\"0 0 512 512\"><path d=\"M501.362 383.95L320.497 51.474c-29.059-48.921-99.896-48.986-128.994 0L10.647 383.95c-29.706 49.989 6.259 113.291 64.482 113.291h361.736c58.174 0 94.203-63.251 64.497-113.291zM256 437.241c-16.538 0-30-13.462-30-30s13.462-30 30-30 30 13.462 30 30-13.462 30-30 30zm30-120c0 16.538-13.462 30-30 30s-30-13.462-30-30v-150c0-16.538 13.462-30 30-30s30 13.462 30 30v150z\"/></svg>\n}\n\n","import React, {useEffect} from 'react';\nimport {AnimationType} from \"./index\";\n\ninterface IProps {\n    hideModal: ()=> void;\n    animationType: AnimationType;\n    Component?: () => JSX.Element;\n    ComponentJSX?: JSX.Element;\n    componentProps: React.ComponentProps<any>\n}\n\nexport default function Modal({hideModal, animationType, Component, ComponentJSX, componentProps }:IProps) {\n\n    let animationClass = '';\n\n    switch (animationType as AnimationType) {\n        case AnimationType.FADE_IN:\n            animationClass = 'animate__animated animate__fadeIn animate__faster';\n            break\n        case AnimationType.HEART_BEAT:\n            animationClass = 'animate__animated animate__heartBeat animate__faster';\n            break\n        case AnimationType.FLASH:\n            animationClass = 'animate__animated animate__flash animate__faster';\n            break\n        case AnimationType.SWING:\n            animationClass = 'animate__animated animate__swing animate__faster';\n            break\n        case AnimationType.ZOOM_IN:\n            animationClass = 'animate__animated animate__zoomIn animate__faster';\n            break\n        case AnimationType.SLIDE_IN_LEFT:\n            animationClass = 'animate__animated animate__slideInLeft animate__faster';\n            break\n        case AnimationType.SLIDE_IN_RIGHT:\n            animationClass = 'animate__animated animate__slideInRight animate__faster';\n            break\n    }\n\n    if (!Component && !ComponentJSX){\n        return null;\n    }\n\n    return (\n        <ModalWrapper>\n            <ModalBackdrop onClick={hideModal}/>\n            <div className={animationClass}>\n                {ComponentJSX && ComponentJSX}\n                {Component && <Component hideModal={hideModal} {...componentProps}/>}\n            </div>\n        </ModalWrapper>\n    )\n\n}\n\nconst ModalBackdrop = ({onClick}: { onClick: () => void }) => {\n    useEffect(() => {\n        document.body.classList.add(\"srm-modal-open\");\n\n        return () => {\n            document.body.classList.remove(\"srm-modal-open\");\n        };\n    }, []);\n\n    return (\n        <div\n            onClick={onClick}\n            className={`srm-modal-backdrop`}\n        >\n        </div>\n    );\n};\n\nconst ModalWrapper = ({children}: { children: any }) => (\n    <div className=\"srm-modal-wrapper\">{children}</div>\n);","import React from \"react\";\n\nimport \"./index.scss\";\nimport \"./animate.css\";\nimport {usePopup} from \"./index\";\nimport Toast from \"./Toast\";\nimport Modal from \"./Modal\";\n\nexport const ModalRoot = () => {\n\n    let {\n        componentJSX: ComponentJSX,\n        component: Component,\n        toasts,\n        componentProps,\n        hideModal,\n        hideToast,\n    } = usePopup();\n\n    componentProps = {...componentProps}\n\n    return (\n        <>\n            <Modal componentProps={componentProps} Component={Component} ComponentJSX={ComponentJSX}\n                   hideModal={hideModal} animationType={componentProps.animationType}/>\n            <Toast hideToast={hideToast} toasts={toasts}/>\n        </>\n    )\n\n};\n","import React from 'react';\nimport {closeIcon, iconIllustrationTypes} from \"./SvgIcons\";\nimport {DialogType} from \"./index\";\n\ninterface IProps {\n    showCloseButton: boolean;\n    type: DialogType;\n    hideModal: () => void;\n    title: string;\n}\n\nconst Header = ({showCloseButton, type, hideModal, title}: IProps) => {\n\n    return (\n        <div className={`header header-${type}`}>\n            {iconIllustrationTypes[type]}\n            {showCloseButton && (\n                <div style={{position: 'absolute', right: 20, cursor: 'pointer'}}\n                     onClick={hideModal}>{closeIcon()}</div>\n            )}\n            <div className={`title ${iconIllustrationTypes[type] ? 'title-margin' : ''}`}>{title}</div>\n        </div>\n    )\n\n}\n\nexport default Header;","import React from 'react';\n\ninterface IProps {\n    optionsToRender: Array<any>\n}\n\nexport default function Footer({optionsToRender}: IProps) {\n\n    return (\n        <div className={'footer'}>\n            <div className={'options-container'}>\n                {optionsToRender.map((option,index) => (\n                    <button key={`option${index}`} className={'option-button'} onClick={option.onClick}>\n                        {option.name}\n                    </button>\n                ))}\n            </div>\n        </div>\n    )\n\n\n}","import React, {Dispatch, SetStateAction} from 'react';\nimport {InputProps} from \"./index\";\n\ninterface IProps {\n    item: InputProps;\n    setInputValues: Dispatch<SetStateAction<{[key:string]:any}>>;\n    inputValues: {};\n}\n\nexport default function Input({item, setInputValues, inputValues}: IProps) {\n\n    return (\n        <div style={{textAlign: \"left\"}}>\n            <label style={{display: \"block\", marginBottom: 5}}>\n                {item.label}\n            </label>\n            {item.inputType && item.inputType !== \"textarea\" ? (\n                <input\n                    className={'input-item'}\n                    onChange={(val) => {\n                        setInputValues({\n                            ...inputValues,\n                            // @ts-ignore\n                            [item.name]: val.nativeEvent.target.value,\n                        });\n                    }}\n                    // @ts-ignore\n                    value={\n                        inputValues[item.name] ? inputValues[item.name] : null\n                    }\n                    id={item.name}\n                    placeholder={item.placeholder}\n                    type={item.inputType || \"text\"}\n                />\n            ) : null}\n            {item.inputType === \"textarea\" ? (\n                <textarea\n                    onChange={(val) => {\n                        setInputValues({\n                            ...inputValues,\n                            // @ts-ignore\n                            [item.name]: val.nativeEvent.target.value,\n                        });\n                    }}\n                    // @ts-ignore\n                    value={\n                        inputValues[item.name] ? inputValues[item.name] : null\n                    }\n                    className={'input-item'}\n                    id={item.name}\n                    placeholder={item.placeholder}\n                />\n            ) : null}\n        </div>\n    )\n\n}","import React, {ChangeEvent, Dispatch, SetStateAction, useRef} from 'react';\nimport {InputProps} from \"./index\";\nimport {closeIcon} from \"./SvgIcons\";\n\ninterface IProps {\n    setInputValues: Dispatch<SetStateAction<{ [key: string]: any }>>;\n    inputValues: { [key: string]: any };\n    item: InputProps;\n}\n\nexport default function ImageInput({setInputValues, inputValues, item}: IProps) {\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const readImage = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files) {\n            let imagePromises: Array<Promise<void>> = [];\n            let images: Array<any> = [];\n            Array.from(event.target.files).forEach((file: File) => {\n                imagePromises.push(\n                    new Promise((resolve) => {\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            images.push({src: e.target!.result, value: file});\n                            resolve();\n                        };\n                        reader.readAsDataURL(file);\n                    })\n                );\n            });\n            Promise.all(imagePromises).then(() => {\n                setInputValues({\n                    ...inputValues,\n                    // @ts-ignore\n                    images: inputValues.images\n                        ? [...inputValues.images, ...images]\n                        : [...images],\n                });\n                inputRef.current!.value! = \"\";\n                // event.target.reset();\n            });\n        }\n    };\n\n    return (\n        <>\n            <div style={{textAlign: \"left\"}}>\n                <label style={{display: \"block\"}}>{item.label || ''}</label>\n                <div\n                    style={{\n                        padding: 10,\n                        textAlign: \"center\",\n                        cursor: \"pointer\",\n                        width: \"90%\",\n                        borderRadius: 5,\n                        boxShadow: '#00000075 0px 0px 2px 0px',\n                        display: \"inline-block\",\n                    }}\n                    onClick={() => {\n                        if (inputRef.current) inputRef.current.click();\n                    }}\n                >\n                    Select Image\n                </div>\n                {inputValues &&\n                item.multiple &&\n                inputValues.images &&\n                inputValues.images.length > 0 ? (\n                    <div style={{margin: 5}}>\n                    {inputValues.images.length} images selected\n                  </div>\n                ) : null}\n                <input\n                    ref={(ref) => {\n                        // @ts-ignore\n                        inputRef.current = ref;\n                    }}\n                    value={inputRef.current ? inputRef.current.value : \"\"}\n                    multiple={item.multiple || false}\n                    className={'input-item'}\n                    onChange={(val) => readImage(val)}\n                    style={{display: \"none\"}}\n                    id={\"image\"}\n                    type={\"file\"}\n                />\n            </div>\n            <div style={{textAlign: \"left\"}}>\n                {inputValues &&\n                inputValues.images &&\n                // @ts-ignore\n                inputValues.images.map((image, index) => (\n                    <div\n                        style={{\n                            margin: 5,\n                            display: \"inline-block\",\n                            position: \"relative\",\n                        }}\n                    >\n                        <img alt=\"\" style={{maxHeight: 100}} src={image.src}/>\n                        <div\n                            onClick={() =>\n                                setInputValues({\n                                    ...inputValues,\n                                    // @ts-ignore\n                                    images: [\n                                        ...inputValues.images.slice(0, index),\n                                        ...inputValues.images.slice(index + 1),\n                                    ],\n                                })\n                            }\n                            style={{\n                                borderRadius: 5,\n                                position: \"absolute\",\n                                top: 5,\n                                right: 5,\n                            }}\n                        >\n                            {closeIcon()}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n\n}","import React, {useState} from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {DialogType, DynamicObject, InputProps, OptionDialogButton} from \"./index\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Input from \"./Input\";\nimport ImageInput from \"./ImageInput\";\n\ninterface DialogProps {\n    title: string,\n    text: string,\n    type: DialogType,\n    hideModal: () => {},\n    optionButtons: Array<OptionDialogButton>,\n    onConfirm: (result?: DynamicObject) => {},\n    onCancel: (result?: DynamicObject) => {},\n    isAlert: boolean,\n    isInput: boolean,\n    confirmText: string,\n    cancelText: string,\n    showCloseButton: boolean,\n    inputs: Array<any>,\n    onDismissed: (result?: DynamicObject) => {},\n    onOpened: (result?: DynamicObject) => {},\n    input: InputProps,\n}\n\nconst Dialog = (props: DialogProps) => {\n    const {\n        title,\n        text,\n        type,\n        hideModal,\n        optionButtons = null,\n        onConfirm = null,\n        onCancel = null,\n        isAlert = true,\n        showCloseButton = false,\n        isInput = false,\n        confirmText = \"Ok\",\n        cancelText = \"Cancel\",\n        inputs = null,\n        onDismissed = null,\n        input,\n    } = props;\n\n    const [inputValues, setInputValues] = useState<{ [key: string]: any }>(\n        input && input[\"default\"] ? {[input.name]: input[\"default\"]} : {}\n    );\n\n    let optionsToRender = [];\n\n    if (!isAlert)\n        if (optionButtons) optionsToRender = optionButtons;\n        else\n            optionsToRender = [\n                {\n                    name: cancelText,\n                    onClick: () => {\n                        hideModal();\n                        if (onCancel) onCancel();\n                        if (onDismissed && isInput) onDismissed(inputValues);\n                    },\n                },\n                {\n                    name: confirmText,\n                    onClick: () => {\n                        hideModal();\n                        if (onConfirm) onConfirm(inputValues);\n                        if (onDismissed && isInput) onDismissed(inputValues);\n                    },\n                },\n            ];\n    else\n        optionsToRender = [\n            {\n                name: confirmText,\n                onClick: () => {\n                    hideModal();\n                },\n            },\n        ];\n\n    let inputsToRender: InputProps[] = [];\n\n    if (isInput) {\n        if (!inputs) inputsToRender = [input];\n        else inputsToRender = inputs;\n    }\n\n    return (\n        <div className={'dialog-wrapper'}>\n            <Header showCloseButton={showCloseButton} type={type} hideModal={hideModal} title={title}/>\n            {text && text !== \"\" ? <div className={'body-text'}>{text}</div> : null}\n            {isInput && (\n                <div className={'inputs-container'}>\n                    <>\n                        {inputsToRender.map((item,index) =>\n                            <div key={`input${index}`} className={'input-container'}>\n                                {item.inputType !== 'image' ? (\n                                        <Input item={item} setInputValues={setInputValues} inputValues={inputValues}/>) :\n                                    <ImageInput item={item} setInputValues={setInputValues}\n                                                inputValues={inputValues}/>}\n                            </div>\n                        )}\n                    </>\n                </div>\n            )}\n            <Footer optionsToRender={optionsToRender}/>\n        </div>\n    );\n};\n\nexport default Dialog;\n","import React, {\n    createContext,\n    useCallback,\n    useContext,\n    useEffect,\n    useReducer\n} from \"react\";\nimport {ModalRoot} from \"./component\";\nimport Dialog from \"./Dialog\";\nimport {ToastPosition} from \"./Toast\";\n\nexport enum AnimationType {\n    ZOOM_IN = 'ZOOM_IN',\n    FADE_IN = 'FADE_IN',\n    FLASH = 'FLASH',\n    SWING = 'SWING',\n    HEART_BEAT = 'HEART_BEAT',\n    SLIDE_IN_LEFT = 'SLIDE_IN_LEFT',\n    SLIDE_IN_RIGHT = 'SLIDE_IN_RIGHT'\n}\n\nexport enum DialogType {\n    WARNING = 'warning',\n    INFO = 'info',\n    DANGER = 'danger',\n    SUCCESS = 'success'\n}\n\nexport interface OptionDialogButton {\n    name: string;\n    onClick: () => void\n}\n\ninterface OptionDialogOptions {\n    title?: string,\n    text?: string;\n    type?: DialogType;\n    optionButtons?: Array<OptionDialogButton>;\n    onConfirm?: () => void;\n    onCancel?: () => void;\n    confirmText?: string;\n    cancelText?: string;\n    showCloseButton?: boolean;\n    animationType?: AnimationType\n}\n\nexport interface InputProps {\n    placeholder?: string;\n    label?: string;\n    inputType: 'text' | 'file' | 'number' | 'image' | 'textarea' | 'date';\n    name: string;\n    default?: string;\n    multiple?: boolean;\n}\n\nexport interface DynamicObject {\n    [key: string]: Object;\n}\n\ninterface InputDialogOptions {\n    title?: string;\n    text?: string;\n    type?: DialogType;\n    options?: Array<OptionDialogButton>;\n    onConfirm?: (result?: DynamicObject) => void;\n    onCancel?: () => void;\n    confirmText?: string;\n    cancelText?: string;\n    inputs?: Array<InputProps>;\n    input?: InputProps;\n    onDismissed?: () => void;\n    showCloseButton?: boolean;\n    animationType?: AnimationType;\n}\n\ninterface AlertOptions {\n    text?: string;\n    type?: DialogType;\n    title?: string;\n    confirmText?: string;\n    showCloseButton?: boolean;\n    animationType?: AnimationType\n}\n\nexport interface ToastOptions {\n    text: string;\n    type: DialogType;\n    position?: ToastPosition;\n    timeoutDuration?: number;\n    containerStyle?: React.CSSProperties,\n    textStyle?: React.CSSProperties\n}\n\nexport type IToast = ToastOptions & { id: string };\n\ninterface PopupContext {\n    component?: () => JSX.Element;\n    componentJSX?: JSX.Element;\n    componentProps?: React.ComponentProps<any>;\n    toasts?: Array<IToast>;\n    showModal: (component: JSX.Element) => void;\n    hideModal: () => void;\n    showAlert:(options:AlertOptions) => void;\n    hideAlert: () => void;\n    showOptionDialog: (options: OptionDialogOptions) => void;\n    showInputDialog: (options: InputDialogOptions) => void;\n    showToast: (options: ToastOptions) => void;\n    hideToast: (toastId: string) => void;\n}\n\nlet DefaultPopupActions: PopupContext = {\n    showModal: (_component: JSX.Element) => null,\n    hideModal: () => null,\n    showAlert:(_options:AlertOptions) => null,\n    hideAlert: () => null,\n    showOptionDialog: (_options: OptionDialogOptions) => null,\n    showInputDialog: (_options: InputDialogOptions) => null,\n    showToast: (_options: ToastOptions) => null,\n    hideToast: (_toastId: string) => null,\n}\n\nlet ExportedPopupActions: Omit<PopupContext, 'componentProps' | 'component' | 'componentJSX' | 'toasts'> = {\n    ...DefaultPopupActions\n}\n\nconst ModalContext = createContext<PopupContext>(DefaultPopupActions);\n\nconst {Provider, Consumer: ModalConsumer} = ModalContext;\n\nconst reducer = (state: any, {\n    type,\n    component,\n    componentProps,\n    componentJSX,\n    toast,\n    id\n}: { type: 'openModal' | 'hideModal' | 'showToast' | 'hideToast', componentJSX?: JSX.Element, component?: any, componentProps?: any, toast?: IToast, id?: string }) => {\n    switch (type) {\n        case \"openModal\":\n            return {...state, component, componentProps, componentJSX};\n        case \"hideModal\":\n            return {...state, component: null, modalProps: {}, componentJSX: null};\n        case \"showToast\":\n            return {...state, toasts: [...state.toasts, toast], componentProps};\n        case \"hideToast\":\n            const index = state.toasts.findIndex((t: { id: string | undefined; }) => t.id === id);\n            return {...state, toasts: [...state.toasts.slice(0, index), ...state.toasts.slice(index+1)]};\n        default:\n            throw new Error(\"Unspecified reducer action\");\n    }\n};\n\nconst PopupProvider = ({children}: { children: any }) => {\n\n    const initialState: PopupContext = {\n        componentJSX: undefined,\n        component: undefined,\n        componentProps: {},\n        toasts: [],\n        showModal: (componentJSX: JSX.Element) => {\n            dispatch({type: \"openModal\", componentJSX});\n        },\n        hideModal: () => {\n            dispatch({type: \"hideModal\"});\n        },\n        showAlert: (options: AlertOptions) => {\n            dispatch({\n                    type: 'openModal',\n                    component: Dialog, componentProps: {isAlert: true, isInputDialog: false, ...options}\n                }\n            )\n        },\n        hideAlert: () => {\n            dispatch({type: \"hideModal\"})\n        },\n        showOptionDialog: (options: OptionDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: false,\n                    ...options\n                }\n            });\n        },\n        showInputDialog: (options: InputDialogOptions) => {\n            dispatch({\n                type: \"openModal\",\n                component: Dialog,\n                componentProps: {\n                    isAlert: false,\n                    isInput: true,\n                    ...options\n                }\n            });\n        },\n        showToast: (options: ToastOptions) => {\n            dispatch({\n                type: 'showToast',\n                toast: {...options, id: Math.random().toString(36).substring(7)},\n                componentProps: {...options}\n            })\n        },\n        hideToast: (toastId?: string) => {\n            dispatch({\n                type: 'hideToast',\n                id: toastId\n            })\n        }\n    };\n\n    ExportedPopupActions = initialState;\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const onKeyDown = useCallback(\n        e => {\n            if (e.key === \"Escape\") {\n                state.hideModal();\n            }\n        },\n        [state]\n    );\n\n    useEffect(() => {\n        state.component === null\n            ? document.addEventListener(\"keydown\", onKeyDown)\n            : document.removeEventListener(\"keydown\", onKeyDown);\n    }, [onKeyDown, state.component]);\n\n    return (\n        <div onKeyDown={onKeyDown} className=\"simple-react-modals\">\n            <Provider value={state}>\n                <ModalRoot/>\n                {children}\n            </Provider>\n        </div>\n    );\n};\n\nconst usePopup = () => useContext(ModalContext);\n\n\n\nexport {ModalConsumer, PopupProvider, usePopup, ExportedPopupActions as PopupActions};","import React from 'react';\nimport {AnimationType, DialogType, PopupActions, PopupProvider, usePopup} from './lib'\n\nfunction callMe() {\n    PopupActions.showToast({text: 'test', type: DialogType.DANGER });\n}\n\nconst MyComponent = () => {\n\n    const TestComponent = (props: { a: string }) => {\n\n        const {hideModal} = usePopup();\n\n        return (\n            <div style={{background: 'white', height: 200, width: 400, borderRadius: 5}}>Received\n                Props: {JSON.stringify(props)}\n                <button onClick={hideModal}>Hide Me</button>\n            </div>\n        )\n\n    }\n\n    const {showAlert, showOptionDialog, showInputDialog, showModal, showToast} = usePopup();\n\n    const buttonStyles: React.CSSProperties = {\n        display: 'block',\n        marginTop:5\n    }\n\n    return (\n        <>\n            <button style={buttonStyles} onClick={() => showModal(<TestComponent a={'test'}/>)}>Show Modal</button>\n            <button style={buttonStyles} onClick={() => showAlert({\n                type: DialogType.DANGER,\n                text: 'test',\n                title: 'test',\n                animationType: AnimationType.FADE_IN\n            })}>Show Danger Alert\n            </button>\n            <button style={buttonStyles} onClick={() => showAlert({\n                type: DialogType.WARNING,\n                text: 'test',\n                title: 'test',\n                animationType: AnimationType.ZOOM_IN\n            })}>Show Warning Alert\n            </button>\n            <button style={buttonStyles} onClick={() => showAlert({type: DialogType.SUCCESS, text: 'test', title: 'test'})}>Show Success Alert\n            </button>\n            <button style={buttonStyles} onClick={() => showAlert({type: DialogType.INFO, text: 'test', title: 'test'})}>Show Info Alert</button>\n            <button style={buttonStyles} onClick={() => showOptionDialog({text: 'test', title: 'test'})}>Show Option Dialog\n            </button>\n            <button style={buttonStyles} onClick={() => showToast({\n                text: 'Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum Lorem Lipsum',\n                type: DialogType.INFO,\n                timeoutDuration: 5000\n            })}>Show Toast\n            </button>\n            <button style={buttonStyles} onClick={() => showInputDialog({\n                title: 'test',\n                input: {inputType: 'image', name: 'testinput'},\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>Show Input Dialog\n            </button>\n\n            <button style={buttonStyles} onClick={() => showInputDialog({\n                title: 'test',\n                inputs: [{inputType: 'text', name: 'test'}, {inputType: 'image', name: \"image\", multiple: true}],\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>Show Input Dialog\n            </button>\n\n            <button style={buttonStyles} onClick={() => showInputDialog({\n                title: 'test',\n                inputs: [{inputType: 'date', name: 'test'}],\n                onConfirm: (response) => {\n                    showAlert({title: 'Result', text: JSON.stringify(response)});\n                }\n            })}>Show Input Dialog\n            </button>\n\n            <button style={buttonStyles} onClick={callMe}>Show Toast Outside of Component\n            </button>\n        </>\n    )\n}\n\nconst App = () => {\n    return (\n        <MyComponent/>\n    )\n}\n\nexport const Setup = () => {\n    return (\n        <PopupProvider>\n            <App/>\n        </PopupProvider>\n    )\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Setup } from './TestApp'\n\nReactDOM.render(<Setup />, document.getElementById('root'))\n"],"sourceRoot":""}